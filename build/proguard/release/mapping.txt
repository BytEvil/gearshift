android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.a:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> a
    android.app.Activity mActivity -> b
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> c
    android.support.v4.widget.DrawerLayout mDrawerLayout -> d
    boolean mDrawerIndicatorEnabled -> e
    android.graphics.drawable.Drawable mThemeImage -> f
    android.graphics.drawable.Drawable mDrawerImage -> g
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> h
    int mDrawerImageResource -> i
    int mOpenDrawerContentDescRes -> j
    int mCloseDrawerContentDescRes -> k
    java.lang.Object mSetIndicatorInfo -> l
    void syncState() -> a
    void setDrawerIndicatorEnabled(boolean) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator() -> b
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> b
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.b:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.c:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.d:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.e:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.f:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> a
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> a
    void setActionBarDescription(int) -> a
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.g:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> a
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.h:
    android.graphics.drawable.Drawable mWrapped -> a
    float mOffset -> b
    float mOffsetBy -> c
    android.graphics.Rect mTmpRect -> d
    void setOffset(float) -> a
    float getOffset() -> a
    void setOffsetBy(float) -> b
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.i:
    int[] THEME_ATTRS -> a
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> a
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> a
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> a
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.j:
    java.lang.reflect.Method setHomeAsUpIndicator -> a
    java.lang.reflect.Method setHomeActionContentDescription -> b
    android.widget.ImageView upIndicatorView -> c
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.k:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.l:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitAllowingStateLoss() -> b
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> c
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.m:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.n:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int mStyle -> a
    int mTheme -> b
    boolean mCancelable -> c
    boolean mShowsDialog -> d
    int mBackStackId -> e
    android.app.Dialog mDialog -> f
    boolean mViewDestroyed -> g
    boolean mDismissed -> h
    boolean mShownByMe -> i
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> a
    void dismissInternal(boolean) -> a
    int getTheme() -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> b
    void onCreate(android.os.Bundle) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> d
    void onStart() -> c
    void onSaveInstanceState(android.os.Bundle) -> e
    void onStop() -> d
    void onDestroyView() -> e
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> a
    int mState -> j
    android.view.View mAnimatingAway -> k
    int mStateAfterAnimating -> l
    android.os.Bundle mSavedFragmentState -> m
    android.util.SparseArray mSavedViewState -> n
    int mIndex -> o
    java.lang.String mWho -> p
    android.os.Bundle mArguments -> q
    android.support.v4.app.Fragment mTarget -> r
    int mTargetIndex -> s
    int mTargetRequestCode -> t
    boolean mAdded -> u
    boolean mRemoving -> v
    boolean mResumed -> w
    boolean mFromLayout -> x
    boolean mInLayout -> y
    boolean mRestored -> z
    int mBackStackNesting -> A
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> B
    android.support.v4.app.FragmentActivity mActivity -> C
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> D
    android.support.v4.app.Fragment mParentFragment -> E
    int mFragmentId -> F
    int mContainerId -> G
    java.lang.String mTag -> H
    boolean mHidden -> I
    boolean mDetached -> J
    boolean mRetainInstance -> K
    boolean mRetaining -> L
    boolean mHasMenu -> M
    boolean mMenuVisible -> N
    boolean mCalled -> O
    int mNextAnim -> P
    android.view.ViewGroup mContainer -> Q
    android.view.View mView -> R
    android.view.View mInnerView -> S
    boolean mDeferStart -> T
    boolean mUserVisibleHint -> U
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> V
    boolean mLoadersStarted -> W
    boolean mCheckedForLoaderManager -> X
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> f
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setArguments(android.os.Bundle) -> g
    android.os.Bundle getArguments() -> g
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> h
    android.content.res.Resources getResources() -> i
    java.lang.String getString(int) -> a
    android.support.v4.app.FragmentManager getFragmentManager() -> j
    boolean isAdded() -> k
    boolean isDetached() -> l
    boolean isHidden() -> m
    void onHiddenChanged(boolean) -> b
    void setHasOptionsMenu(boolean) -> c
    void setMenuVisibility(boolean) -> d
    void setUserVisibleHint(boolean) -> e
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    android.view.View getView() -> n
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> h
    void onStart() -> c
    void onResume() -> o
    void onSaveInstanceState(android.os.Bundle) -> e
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> p
    void onStop() -> d
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> e
    void onDestroy() -> q
    void initState() -> r
    void onDetach() -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> s
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> t
    void performCreate(android.os.Bundle) -> i
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> j
    void performStart() -> u
    void performResume() -> v
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> w
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> k
    void performPause() -> x
    void performStop() -> y
    void performReallyStop() -> z
    void performDestroyView() -> A
    void performDestroy() -> B
android.support.v4.app.Fragment$1 -> android.support.v4.app.o:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.p:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.q:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.r:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> f
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.t:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.u:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.v:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.w:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.y:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.z:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void popBackStack(int,int) -> a
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> b
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> c
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> d
    void makeInactive(android.support.v4.app.Fragment) -> e
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> f
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> g
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.aa:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.ab:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.ac:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.ad:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.ae:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.af:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.ag:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.ah:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.ai:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.aj:
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> c
    int commit() -> a
    int commitAllowingStateLoss() -> b
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    android.os.Handler mHandler -> i
    java.lang.Runnable mRequestFocus -> Y
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> Z
    android.widget.ListAdapter mAdapter -> a
    android.widget.ListView mList -> b
    android.view.View mEmptyView -> c
    android.widget.TextView mStandardEmptyView -> d
    android.view.View mProgressContainer -> e
    android.view.View mListContainer -> f
    java.lang.CharSequence mEmptyText -> g
    boolean mListShown -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onDestroyView() -> e
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void setListAdapter(android.widget.ListAdapter) -> a
    android.widget.ListView getListView() -> a
    void setListShown(boolean,boolean) -> a
    void ensureList() -> C
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ak:
    android.support.v4.app.ListFragment this$0 -> a
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.al:
    android.support.v4.app.ListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.am:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    android.support.v4.content.Loader getLoader(int) -> b
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.an:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ao:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    android.support.v4.content.Loader getLoader(int) -> b
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ap:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NavUtils -> android.support.v4.app.aq:
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> a
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.ar:
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.as:
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.at:
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
android.support.v4.app.NavUtilsJB -> android.support.v4.app.au:
    void navigateUpTo(android.app.Activity,android.content.Intent) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.av:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.aw:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    java.lang.Object doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
android.support.v4.content.Loader -> android.support.v4.a.c:
    int mId -> f
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> g
    android.content.Context mContext -> h
    boolean mStarted -> i
    boolean mAbandoned -> j
    boolean mReset -> k
    boolean mContentChanged -> l
    boolean mProcessingChange -> m
    void deliverResult(java.lang.Object) -> b
    android.content.Context getContext() -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    boolean isStarted() -> g
    boolean isAbandoned() -> h
    boolean isReset() -> i
    void startLoading() -> j
    void onStartLoading() -> k
    void forceLoad() -> l
    void onForceLoad() -> a
    void stopLoading() -> m
    void onStopLoading() -> n
    void abandon() -> o
    void onAbandon() -> p
    void reset() -> q
    void onReset() -> r
    boolean takeContentChanged() -> s
    void commitContentChanged() -> t
    void rollbackContentChanged() -> u
    void onContentChanged() -> v
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.d:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.e:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPreExecute() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> a
    boolean isCancelled() -> c
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void finish(java.lang.Object) -> e
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.f:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.g:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.h:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.i:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.k:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.m:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    int indexOfKey(int) -> g
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> h
    int idealIntArraySize(int) -> i
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.io.PrintWriter,int) -> a
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> b
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> b
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.af:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ai:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.aj:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ak:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.al:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.am:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.an:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ao:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aq:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ar:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.as:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.at:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.au:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.av:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aw:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ax:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ay:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.az:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ba:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bb:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bd:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.be:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bf:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bg:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.bh:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bi:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bj:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bk:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bl:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bm:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bn:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bo:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.bp:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bq:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.br:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bs:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bt:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bu:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bv:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.bw:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bx:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> c
    boolean isChecked() -> d
    boolean isFocusable() -> e
    void setFocusable(boolean) -> a
    boolean isFocused() -> f
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> g
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> h
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> i
    void setSelected(boolean) -> e
    boolean isClickable() -> j
    void setClickable(boolean) -> f
    boolean isLongClickable() -> k
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> l
    void setEnabled(boolean) -> h
    boolean isPassword() -> m
    boolean isScrollable() -> n
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> o
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> p
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> q
    java.lang.CharSequence getContentDescription() -> r
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> s
    java.lang.String getViewIdResourceName() -> t
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> r
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> s
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.f:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> r
    boolean isAccessibilityFocused(java.lang.Object) -> s
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.h:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    boolean isAccessibilityFocused(java.lang.Object) -> b
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.i:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.n:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.q:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.r:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.s:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.t:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.u:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.v:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.w:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.x:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> a
    void setDrawerShadow(int,int) -> a
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> b
    void setDrawerLockMode(int,android.view.View) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> c
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> d
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> e
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> f
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.c:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.d:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.e:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.f:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.l:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.m:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.n:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.p:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.q:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.r:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.s:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.t:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.u:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.v:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.w:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.y:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.aa:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ab:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ac:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ad:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.google.gson.DefaultDateTypeAdapter -> a.a.a.a:
    java.text.DateFormat enUsFormat -> a
    java.text.DateFormat localFormat -> b
    java.text.DateFormat iso8601Format -> c
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> a
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.ExclusionStrategy -> a.a.a.b:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> a.a.a.c:
    java.lang.reflect.Field field -> a
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> a
com.google.gson.FieldNamingPolicy -> a.a.a.d:
    com.google.gson.FieldNamingPolicy IDENTITY -> a
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> b
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> c
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> d
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> e
    com.google.gson.FieldNamingPolicy[] $VALUES -> f
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> b
    java.lang.String upperCaseFirstLetter(java.lang.String) -> b
    java.lang.String modifyString(char,java.lang.String,int) -> a
    java.lang.String access$100(java.lang.String) -> a
    java.lang.String access$200(java.lang.String,java.lang.String) -> a
com.google.gson.FieldNamingPolicy$1 -> a.a.a.e:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$2 -> a.a.a.f:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$3 -> a.a.a.g:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$4 -> a.a.a.h:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingPolicy$5 -> a.a.a.i:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.FieldNamingStrategy -> a.a.a.j:
    java.lang.String translateName(java.lang.reflect.Field) -> a
com.google.gson.Gson -> a.a.a.k:
    java.lang.ThreadLocal calls -> c
    java.util.Map typeTokenCache -> d
    java.util.List factories -> e
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> f
    boolean serializeNulls -> g
    boolean htmlSafe -> h
    boolean generateNonExecutableJson -> i
    boolean prettyPrinting -> j
    com.google.gson.JsonDeserializationContext deserializationContext -> a
    com.google.gson.JsonSerializationContext serializationContext -> b
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> a
    com.google.gson.TypeAdapter floatAdapter(boolean) -> b
    void checkValidFloatingPoint(double) -> a
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> a
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> a
    java.lang.String toJson(java.lang.Object) -> b
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> b
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> a
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> a
    java.lang.String toJson(com.google.gson.JsonElement) -> a
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> a
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> a
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> a
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> a
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> a
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> a
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> a
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> a
com.google.gson.Gson$1 -> a.a.a.l:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$2 -> a.a.a.m:
    com.google.gson.Gson this$0 -> a
com.google.gson.Gson$3 -> a.a.a.n:
    com.google.gson.Gson this$0 -> a
    java.lang.Double read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$4 -> a.a.a.o:
    com.google.gson.Gson this$0 -> a
    java.lang.Float read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$5 -> a.a.a.p:
    com.google.gson.Gson this$0 -> a
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.Gson$FutureTypeAdapter -> a.a.a.q:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.GsonBuilder -> a.a.a.r:
    com.google.gson.internal.Excluder excluder -> a
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> b
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> c
    java.util.Map instanceCreators -> d
    java.util.List factories -> e
    java.util.List hierarchyFactories -> f
    boolean serializeNulls -> g
    java.lang.String datePattern -> h
    int dateStyle -> i
    int timeStyle -> j
    boolean complexMapKeySerialization -> k
    boolean serializeSpecialFloatingPointValues -> l
    boolean escapeHtmlChars -> m
    boolean prettyPrinting -> n
    boolean generateNonExecutableJson -> o
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> a
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> a
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> a
    com.google.gson.Gson create() -> a
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> a
com.google.gson.InstanceCreator -> a.a.a.s:
    java.lang.Object createInstance(java.lang.reflect.Type) -> a
com.google.gson.JsonArray -> a.a.a.t:
    java.util.List elements -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean getAsBoolean() -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> a.a.a.u:
com.google.gson.JsonDeserializer -> a.a.a.v:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> b
com.google.gson.JsonElement -> a.a.a.w:
    boolean isJsonArray() -> g
    boolean isJsonObject() -> h
    boolean isJsonPrimitive() -> i
    boolean isJsonNull() -> j
    com.google.gson.JsonObject getAsJsonObject() -> k
    com.google.gson.JsonArray getAsJsonArray() -> l
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> m
    boolean getAsBoolean() -> f
    java.lang.Boolean getAsBooleanWrapper() -> n
    java.lang.Number getAsNumber() -> a
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> a.a.a.x:
com.google.gson.JsonNull -> a.a.a.y:
    com.google.gson.JsonNull INSTANCE -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> a.a.a.z:
    com.google.gson.internal.LinkedTreeMap members -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    java.util.Set entrySet() -> o
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> a.a.a.aa:
com.google.gson.JsonPrimitive -> a.a.a.ab:
    java.lang.Class[] PRIMITIVE_TYPES -> a
    java.lang.Object value -> b
    void setValue(java.lang.Object) -> a
    boolean isBoolean() -> o
    java.lang.Boolean getAsBooleanWrapper() -> n
    boolean getAsBoolean() -> f
    boolean isNumber() -> p
    java.lang.Number getAsNumber() -> a
    boolean isString() -> q
    java.lang.String getAsString() -> b
    double getAsDouble() -> c
    long getAsLong() -> d
    int getAsInt() -> e
    boolean isPrimitiveOrString(java.lang.Object) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> a
com.google.gson.JsonSerializationContext -> a.a.a.ac:
com.google.gson.JsonSerializer -> a.a.a.ad:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.JsonSyntaxException -> a.a.a.ae:
com.google.gson.LongSerializationPolicy -> a.a.a.af:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy[] $VALUES -> c
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
com.google.gson.LongSerializationPolicy$1 -> a.a.a.ag:
com.google.gson.LongSerializationPolicy$2 -> a.a.a.ah:
com.google.gson.TreeTypeAdapter -> a.a.a.ai:
    com.google.gson.JsonSerializer serializer -> a
    com.google.gson.JsonDeserializer deserializer -> b
    com.google.gson.Gson gson -> c
    com.google.gson.reflect.TypeToken typeToken -> d
    com.google.gson.TypeAdapterFactory skipPast -> e
    com.google.gson.TypeAdapter delegate -> f
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> a
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> b
com.google.gson.TreeTypeAdapter$1 -> a.a.a.aj:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> a.a.a.ak:
    com.google.gson.reflect.TypeToken exactType -> a
    boolean matchRawType -> b
    java.lang.Class hierarchyType -> c
    com.google.gson.JsonSerializer serializer -> d
    com.google.gson.JsonDeserializer deserializer -> e
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.TypeAdapter -> a.a.a.al:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
com.google.gson.TypeAdapterFactory -> a.a.a.am:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.annotations.Expose -> a.a.a.a.a:
    boolean serialize() -> a
    boolean deserialize() -> b
com.google.gson.annotations.SerializedName -> a.a.a.a.b:
    java.lang.String value() -> a
com.google.gson.annotations.Since -> a.a.a.a.c:
    double value() -> a
com.google.gson.annotations.Until -> a.a.a.a.d:
    double value() -> a
com.google.gson.internal.$Gson$Preconditions -> a.a.a.b.a:
    java.lang.Object checkNotNull(java.lang.Object) -> a
    void checkArgument(boolean) -> a
com.google.gson.internal.$Gson$Types -> a.a.a.b.b:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> a
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> b
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> c
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> d
    java.lang.Class getRawType(java.lang.reflect.Type) -> e
    boolean equal(java.lang.Object,java.lang.Object) -> a
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    int hashCodeOrZero(java.lang.Object) -> b
    java.lang.String typeToString(java.lang.reflect.Type) -> f
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> g
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> a
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> a
    int indexOf(java.lang.Object[],java.lang.Object) -> a
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> a
    void checkNotPrimitive(java.lang.reflect.Type) -> i
    void access$000(java.lang.reflect.Type) -> h
    int access$100(java.lang.Object) -> a
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> a.a.a.b.c:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> a.a.a.b.d:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> a.a.a.b.e:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> a.a.a.b.f:
    java.util.Map instanceCreators -> a
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> a
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> b
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> a.a.a.b.g:
    com.google.gson.InstanceCreator val$typeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$10 -> a.a.a.b.h:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$11 -> a.a.a.b.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$12 -> a.a.a.b.j:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$2 -> a.a.a.b.k:
    com.google.gson.InstanceCreator val$rawTypeCreator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$3 -> a.a.a.b.l:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$4 -> a.a.a.b.m:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$5 -> a.a.a.b.n:
    java.lang.reflect.Type val$type -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$6 -> a.a.a.b.o:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$7 -> a.a.a.b.p:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$8 -> a.a.a.b.q:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.ConstructorConstructor$9 -> a.a.a.b.r:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> a
com.google.gson.internal.Excluder -> a.a.a.b.s:
    com.google.gson.internal.Excluder DEFAULT -> a
    double version -> b
    int modifiers -> c
    boolean serializeInnerClasses -> d
    boolean requireExpose -> e
    java.util.List serializationStrategies -> f
    java.util.List deserializationStrategies -> g
    com.google.gson.internal.Excluder clone() -> a
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    boolean excludeClass(java.lang.Class,boolean) -> a
    boolean isAnonymousOrLocal(java.lang.Class) -> a
    boolean isInnerClass(java.lang.Class) -> b
    boolean isStatic(java.lang.Class) -> c
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    boolean isValidSince(com.google.gson.annotations.Since) -> a
    boolean isValidUntil(com.google.gson.annotations.Until) -> a
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> a.a.a.b.t:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.JsonReaderInternalAccess -> a.a.a.b.u:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> a
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.internal.LazilyParsedNumber -> a.a.a.b.v:
    java.lang.String value -> a
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.LinkedTreeMap -> a.a.a.b.w:
    java.util.Comparator NATURAL_ORDER -> g
    java.util.Comparator comparator -> a
    com.google.gson.internal.LinkedTreeMap$Node root -> b
    int size -> c
    int modCount -> d
    com.google.gson.internal.LinkedTreeMap$Node header -> e
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> h
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> i
    boolean $assertionsDisabled -> f
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> a
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> a
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> b
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> b
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> a
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.gson.internal.LinkedTreeMap$1 -> a.a.a.b.x:
    int compare(java.lang.Comparable,java.lang.Comparable) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> a.a.a.b.y:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> a.a.a.b.z:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> a
    java.util.Map$Entry next() -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> a.a.a.b.aa:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> a.a.a.b.ab:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> a
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> a.a.a.b.ac:
    com.google.gson.internal.LinkedTreeMap$Node next -> b
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> c
    int expectedModCount -> d
    com.google.gson.internal.LinkedTreeMap this$0 -> e
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> b
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> a.a.a.b.ad:
    com.google.gson.internal.LinkedTreeMap$Node parent -> a
    com.google.gson.internal.LinkedTreeMap$Node left -> b
    com.google.gson.internal.LinkedTreeMap$Node right -> c
    com.google.gson.internal.LinkedTreeMap$Node next -> d
    com.google.gson.internal.LinkedTreeMap$Node prev -> e
    java.lang.Object key -> f
    java.lang.Object value -> g
    int height -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> a
    com.google.gson.internal.LinkedTreeMap$Node last() -> b
com.google.gson.internal.ObjectConstructor -> a.a.a.b.ae:
    java.lang.Object construct() -> a
com.google.gson.internal.Primitives -> a.a.a.b.af:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    boolean isPrimitive(java.lang.reflect.Type) -> a
    java.lang.Class wrap(java.lang.Class) -> a
com.google.gson.internal.Streams -> a.a.a.b.ag:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> a
    java.io.Writer writerForAppendable(java.lang.Appendable) -> a
com.google.gson.internal.Streams$1 -> a.a.a.b.ah:
com.google.gson.internal.Streams$AppendableWriter -> a.a.a.b.ai:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> a.a.a.b.aj:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> a.a.a.b.ak:
    java.lang.Object newInstance(java.lang.Class) -> a
    com.google.gson.internal.UnsafeAllocator create() -> a
com.google.gson.internal.UnsafeAllocator$1 -> a.a.a.b.al:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$2 -> a.a.a.b.am:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$3 -> a.a.a.b.an:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.UnsafeAllocator$4 -> a.a.a.b.ao:
    java.lang.Object newInstance(java.lang.Class) -> a
com.google.gson.internal.bind.ArrayTypeAdapter -> a.a.a.b.a.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.lang.Class componentType -> b
    com.google.gson.TypeAdapter componentTypeAdapter -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> a.a.a.b.a.b:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> a.a.a.b.a.c:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> a.a.a.b.a.d:
    com.google.gson.TypeAdapter elementTypeAdapter -> a
    com.google.gson.internal.ObjectConstructor constructor -> b
    java.util.Collection read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter -> a.a.a.b.a.e:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat enUsFormat -> b
    java.text.DateFormat localFormat -> c
    java.text.DateFormat iso8601Format -> d
    java.text.DateFormat buildIso8601Format() -> a
    java.util.Date read(com.google.gson.stream.JsonReader) -> a
    java.util.Date deserializeToDate(java.lang.String) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.DateTypeAdapter$1 -> a.a.a.b.a.f:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.JsonTreeReader -> a.a.a.b.a.g:
    java.io.Reader UNREADABLE_READER -> a
    java.lang.Object SENTINEL_CLOSED -> b
    java.util.List stack -> c
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    java.lang.Object peekStack() -> q
    java.lang.Object popStack() -> r
    void expect(com.google.gson.stream.JsonToken) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    java.lang.String toString() -> toString
    void promoteNameToValue() -> o
com.google.gson.internal.bind.JsonTreeReader$1 -> a.a.a.b.a.h:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> a.a.a.b.a.i:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    com.google.gson.JsonElement get() -> a
    com.google.gson.JsonElement peek() -> j
    void put(com.google.gson.JsonElement) -> a
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> a.a.a.b.a.j:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> a.a.a.b.a.k:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    boolean complexMapKeySerialization -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> a
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> a
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> a.a.a.b.a.l:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.util.Map read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> a
    java.lang.String keyToString(com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter -> a.a.a.b.a.m:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.Gson gson -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> a.a.a.b.a.n:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> a.a.a.b.a.o:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> a.a.a.b.a.p:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    boolean excludeField(java.lang.reflect.Field,boolean) -> a
    java.lang.String getFieldName(java.lang.reflect.Field) -> a
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> a
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> a.a.a.b.a.q:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> a.a.a.b.a.r:
    com.google.gson.internal.ObjectConstructor constructor -> a
    java.util.Map boundFields -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> a.a.a.b.a.s:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> a.a.a.b.a.t:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> a.a.a.b.a.u:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TimeTypeAdapter -> a.a.a.b.a.v:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TimeTypeAdapter$1 -> a.a.a.b.a.w:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> a.a.a.b.a.x:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters -> a.a.a.b.a.y:
    com.google.gson.TypeAdapter CLASS -> a
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> b
    com.google.gson.TypeAdapter BIT_SET -> c
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> d
    com.google.gson.TypeAdapter BOOLEAN -> e
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> f
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> g
    com.google.gson.TypeAdapter BYTE -> h
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> i
    com.google.gson.TypeAdapter SHORT -> j
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> k
    com.google.gson.TypeAdapter INTEGER -> l
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> m
    com.google.gson.TypeAdapter LONG -> n
    com.google.gson.TypeAdapter FLOAT -> o
    com.google.gson.TypeAdapter DOUBLE -> p
    com.google.gson.TypeAdapter NUMBER -> q
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> r
    com.google.gson.TypeAdapter CHARACTER -> s
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> t
    com.google.gson.TypeAdapter STRING -> u
    com.google.gson.TypeAdapter BIG_DECIMAL -> v
    com.google.gson.TypeAdapter BIG_INTEGER -> w
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> x
    com.google.gson.TypeAdapter STRING_BUILDER -> y
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> z
    com.google.gson.TypeAdapter STRING_BUFFER -> A
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> B
    com.google.gson.TypeAdapter URL -> C
    com.google.gson.TypeAdapterFactory URL_FACTORY -> D
    com.google.gson.TypeAdapter URI -> E
    com.google.gson.TypeAdapterFactory URI_FACTORY -> F
    com.google.gson.TypeAdapter INET_ADDRESS -> G
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> H
    com.google.gson.TypeAdapter UUID -> I
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> J
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> K
    com.google.gson.TypeAdapter CALENDAR -> L
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> M
    com.google.gson.TypeAdapter LOCALE -> N
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> O
    com.google.gson.TypeAdapter JSON_ELEMENT -> P
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> Q
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> R
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> a
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> a
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> b
com.google.gson.internal.bind.TypeAdapters$1 -> a.a.a.b.a.z:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> a
    java.lang.Class read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$10 -> a.a.a.b.a.aa:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$11 -> a.a.a.b.a.ab:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$12 -> a.a.a.b.a.ac:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$13 -> a.a.a.b.a.ad:
    java.lang.String read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$14 -> a.a.a.b.a.ae:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$15 -> a.a.a.b.a.af:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$16 -> a.a.a.b.a.ag:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$17 -> a.a.a.b.a.ah:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$18 -> a.a.a.b.a.ai:
    java.net.URL read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$19 -> a.a.a.b.a.aj:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$2 -> a.a.a.b.a.ak:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$20 -> a.a.a.b.a.al:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$21 -> a.a.a.b.a.am:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$22 -> a.a.a.b.a.an:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$22$1 -> a.a.a.b.a.ao:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> b
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$23 -> a.a.a.b.a.ap:
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$24 -> a.a.a.b.a.aq:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$25 -> a.a.a.b.a.ar:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$26 -> a.a.a.b.a.as:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$27 -> a.a.a.b.a.at:
    com.google.gson.reflect.TypeToken val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
com.google.gson.internal.bind.TypeAdapters$28 -> a.a.a.b.a.au:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> a.a.a.b.a.av:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> a.a.a.b.a.aw:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$30 -> a.a.a.b.a.ax:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> a.a.a.b.a.ay:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> a
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> a.a.a.b.a.az:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> a.a.a.b.a.ba:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$5 -> a.a.a.b.a.bb:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$6 -> a.a.a.b.a.bc:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$7 -> a.a.a.b.a.bd:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$8 -> a.a.a.b.a.be:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$9 -> a.a.a.b.a.bf:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> a.a.a.b.a.bg:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> b
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
com.google.gson.reflect.TypeToken -> a.a.a.c.a:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> a
    java.lang.Class getRawType() -> a
    java.lang.reflect.Type getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> a
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> b
com.google.gson.stream.JsonReader -> a.a.a.d.a:
    char[] NON_EXECUTE_PREFIX -> a
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int lineStart -> h
    int peeked -> i
    long peekedLong -> j
    int peekedNumberLength -> k
    java.lang.String peekedString -> l
    int[] stack -> m
    int stackSize -> n
    void setLenient(boolean) -> a
    boolean isLenient() -> p
    void beginArray() -> a
    void endArray() -> b
    void beginObject() -> c
    void endObject() -> d
    boolean hasNext() -> e
    com.google.gson.stream.JsonToken peek() -> f
    int doPeek() -> o
    int peekKeyword() -> q
    int peekNumber() -> r
    boolean isLiteral(char) -> a
    java.lang.String nextName() -> g
    java.lang.String nextString() -> h
    boolean nextBoolean() -> i
    void nextNull() -> j
    double nextDouble() -> k
    long nextLong() -> l
    java.lang.String nextQuotedValue(char) -> b
    java.lang.String nextUnquotedValue() -> s
    void skipQuotedValue(char) -> c
    void skipUnquotedValue() -> t
    int nextInt() -> m
    void close() -> close
    void skipValue() -> n
    void push(int) -> a
    boolean fillBuffer(int) -> b
    int getLineNumber() -> u
    int getColumnNumber() -> v
    int nextNonWhitespace(boolean) -> b
    void checkLenient() -> w
    void skipToEndOfLine() -> x
    boolean skipTo(java.lang.String) -> a
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> y
    java.io.IOException syntaxError(java.lang.String) -> b
    void consumeNonExecutePrefix() -> z
    int access$000(com.google.gson.stream.JsonReader) -> a
    int access$100(com.google.gson.stream.JsonReader) -> b
    int access$002(com.google.gson.stream.JsonReader,int) -> a
    int access$200(com.google.gson.stream.JsonReader) -> c
    int access$300(com.google.gson.stream.JsonReader) -> d
com.google.gson.stream.JsonReader$1 -> a.a.a.d.b:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> a
com.google.gson.stream.JsonToken -> a.a.a.d.c:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> a
    com.google.gson.stream.JsonToken END_ARRAY -> b
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> c
    com.google.gson.stream.JsonToken END_OBJECT -> d
    com.google.gson.stream.JsonToken NAME -> e
    com.google.gson.stream.JsonToken STRING -> f
    com.google.gson.stream.JsonToken NUMBER -> g
    com.google.gson.stream.JsonToken BOOLEAN -> h
    com.google.gson.stream.JsonToken NULL -> i
    com.google.gson.stream.JsonToken END_DOCUMENT -> j
    com.google.gson.stream.JsonToken[] $VALUES -> k
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> a.a.a.d.d:
    java.lang.String[] REPLACEMENT_CHARS -> a
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> b
    java.io.Writer out -> c
    int[] stack -> d
    int stackSize -> e
    java.lang.String indent -> f
    java.lang.String separator -> g
    boolean lenient -> h
    boolean htmlSafe -> i
    java.lang.String deferredName -> j
    boolean serializeNulls -> k
    void setIndent(java.lang.String) -> c
    void setLenient(boolean) -> b
    boolean isLenient() -> g
    void setHtmlSafe(boolean) -> c
    boolean isHtmlSafe() -> h
    void setSerializeNulls(boolean) -> d
    boolean getSerializeNulls() -> i
    com.google.gson.stream.JsonWriter beginArray() -> b
    com.google.gson.stream.JsonWriter endArray() -> c
    com.google.gson.stream.JsonWriter beginObject() -> d
    com.google.gson.stream.JsonWriter endObject() -> e
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> a
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> a
    void push(int) -> a
    int peek() -> a
    void replaceTop(int) -> b
    com.google.gson.stream.JsonWriter name(java.lang.String) -> a
    void writeDeferredName() -> j
    com.google.gson.stream.JsonWriter value(java.lang.String) -> b
    com.google.gson.stream.JsonWriter nullValue() -> f
    com.google.gson.stream.JsonWriter value(boolean) -> a
    com.google.gson.stream.JsonWriter value(long) -> a
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> a
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> d
    void newline() -> k
    void beforeName() -> l
    void beforeValue(boolean) -> e
com.google.gson.stream.MalformedJsonException -> a.a.a.d.e:
org.sugr.gearshift.AboutActivity -> org.sugr.gearshift.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.sugr.gearshift.BackupAgent -> org.sugr.gearshift.BackupAgent:
    void onCreate() -> onCreate
org.sugr.gearshift.BasePreferenceFragment -> org.sugr.gearshift.BasePreferenceFragment:
    android.content.SharedPreferences mSharedPrefs -> a
    java.lang.Object[][] mSummaryPrefs -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void updatePrefSummary(java.lang.String) -> a
org.sugr.gearshift.FiltersSettingsFragment -> org.sugr.gearshift.FiltersSettingsFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
org.sugr.gearshift.G -> org.sugr.gearshift.a:
    java.util.Comparator SIMPLE_STRING_COMPARATOR -> a
    boolean DEBUG -> b
    void logE(java.lang.String,java.lang.Exception) -> a
    void logD(java.lang.String,java.lang.Object[]) -> a
    void logD(java.lang.String) -> a
    java.lang.String readableFileSize(long) -> a
    java.lang.String readablePercent(float) -> a
    java.lang.String readableRemainingTime(long,android.content.Context) -> a
    void requestBackup(android.content.Context) -> a
org.sugr.gearshift.G$1 -> org.sugr.gearshift.b:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.sugr.gearshift.G$FilterBy -> org.sugr.gearshift.c:
    org.sugr.gearshift.G$FilterBy ALL -> a
    org.sugr.gearshift.G$FilterBy DOWNLOADING -> b
    org.sugr.gearshift.G$FilterBy SEEDING -> c
    org.sugr.gearshift.G$FilterBy PAUSED -> d
    org.sugr.gearshift.G$FilterBy COMPLETE -> e
    org.sugr.gearshift.G$FilterBy INCOMPLETE -> f
    org.sugr.gearshift.G$FilterBy ACTIVE -> g
    org.sugr.gearshift.G$FilterBy CHECKING -> h
    org.sugr.gearshift.G$FilterBy[] $VALUES -> i
    org.sugr.gearshift.G$FilterBy[] values() -> values
    org.sugr.gearshift.G$FilterBy valueOf(java.lang.String) -> valueOf
org.sugr.gearshift.G$SortBy -> org.sugr.gearshift.d:
    org.sugr.gearshift.G$SortBy NAME -> a
    org.sugr.gearshift.G$SortBy SIZE -> b
    org.sugr.gearshift.G$SortBy STATUS -> c
    org.sugr.gearshift.G$SortBy RATE_DOWNLOAD -> d
    org.sugr.gearshift.G$SortBy RATE_UPLOAD -> e
    org.sugr.gearshift.G$SortBy AGE -> f
    org.sugr.gearshift.G$SortBy PROGRESS -> g
    org.sugr.gearshift.G$SortBy RATIO -> h
    org.sugr.gearshift.G$SortBy ACTIVITY -> i
    org.sugr.gearshift.G$SortBy LOCATION -> j
    org.sugr.gearshift.G$SortBy PEERS -> k
    org.sugr.gearshift.G$SortBy QUEUE -> l
    org.sugr.gearshift.G$SortBy[] $VALUES -> m
    org.sugr.gearshift.G$SortBy[] values() -> values
    org.sugr.gearshift.G$SortBy valueOf(java.lang.String) -> valueOf
org.sugr.gearshift.G$SortOrder -> org.sugr.gearshift.e:
    org.sugr.gearshift.G$SortOrder ASCENDING -> a
    org.sugr.gearshift.G$SortOrder DESCENDING -> b
    org.sugr.gearshift.G$SortOrder[] $VALUES -> c
    org.sugr.gearshift.G$SortOrder[] values() -> values
    org.sugr.gearshift.G$SortOrder valueOf(java.lang.String) -> valueOf
org.sugr.gearshift.GeneralSettingsFragment -> org.sugr.gearshift.GeneralSettingsFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
org.sugr.gearshift.SettingsActivity -> org.sugr.gearshift.SettingsActivity:
    android.preference.PreferenceActivity$Header mAppPreferencesHeader -> a
    android.preference.PreferenceActivity$Header mFiltersHeader -> b
    android.preference.PreferenceActivity$Header mSortHeader -> c
    android.preference.PreferenceActivity$Header mProfileHeaderSeparatorHeader -> d
    android.preference.PreferenceActivity$Header[] mProfileHeaders -> e
    java.util.List mHeaders -> f
    org.sugr.gearshift.TransmissionProfile[] mProfiles -> g
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mDefaultPrefListener -> h
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mProfilesPrefListener -> i
    void onBuildHeaders(java.util.List) -> onBuildHeaders
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.content.Loader,org.sugr.gearshift.TransmissionProfile[]) -> a
    void onLoaderReset(android.content.Loader) -> onLoaderReset
    android.preference.PreferenceActivity$Header getProfileHeader(org.sugr.gearshift.TransmissionProfile) -> a
    android.preference.PreferenceActivity$Header getAppPreferencesHeader() -> a
    android.preference.PreferenceActivity$Header getFiltersHeader() -> b
    android.preference.PreferenceActivity$Header getSortHeader() -> c
    void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
org.sugr.gearshift.SettingsActivity$1 -> org.sugr.gearshift.f:
    org.sugr.gearshift.SettingsActivity this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.SettingsActivity$2 -> org.sugr.gearshift.g:
    org.sugr.gearshift.SettingsActivity this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.SettingsActivity$HeaderAdapter -> org.sugr.gearshift.h:
    android.view.LayoutInflater mInflater -> a
    int getHeaderType(android.preference.PreferenceActivity$Header) -> a
    int getItemViewType(int) -> getItemViewType
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.sugr.gearshift.SettingsActivity$HeaderAdapter$HeaderViewHolder -> org.sugr.gearshift.i:
    android.widget.TextView title -> a
    android.widget.TextView summary -> b
org.sugr.gearshift.SortSettingsFragment -> org.sugr.gearshift.SortSettingsFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
org.sugr.gearshift.TimePickerFragment -> org.sugr.gearshift.j:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> c
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
org.sugr.gearshift.Torrent -> org.sugr.gearshift.Torrent:
    int mId -> a
    int mStatus -> b
    java.lang.String mName -> c
    int mError -> d
    java.lang.String mErrorString -> e
    float mMetadataPercentComplete -> f
    float mPercentDone -> g
    long mEta -> h
    boolean mFinished -> i
    boolean mStalled -> j
    int mPeersConnected -> k
    int mPeersGettingFromUs -> l
    int mPeersSendingToUs -> m
    long mLeftUntilDone -> n
    long mDesiredAvailable -> o
    long mTotalSize -> p
    long mSizeWhenDone -> q
    long mRateDownload -> r
    long mRateUpload -> s
    int mQueuePosition -> t
    float mRecheckProgress -> u
    int mSeedRatioMode -> v
    float mSeedRatioLimit -> w
    long mUploadedEver -> x
    float mUploadRatio -> y
    long mAddedDate -> z
    long mStartDate -> A
    long mActivityDate -> B
    long mCorruptEver -> C
    java.lang.String mDownloadDir -> D
    long mDownloadedEver -> E
    long mHaveUnchecked -> F
    long mHaveValid -> G
    org.sugr.gearshift.Torrent$Tracker[] mTrackers -> H
    org.sugr.gearshift.Torrent$TrackerStats[] mTrackerStats -> I
    java.lang.String mComment -> J
    java.lang.String mCreator -> K
    long mDateCreated -> L
    org.sugr.gearshift.Torrent$File[] mFiles -> M
    java.lang.String mHashString -> N
    boolean mPrivate -> O
    int mPieceCount -> P
    long mPieceSize -> Q
    int mTorrentPriority -> R
    long mDownloadLimit -> S
    boolean mDownloadLimited -> T
    org.sugr.gearshift.Torrent$FileStats[] mFileStats -> U
    boolean mHonorsSessionLimits -> V
    long mUploadLimit -> W
    boolean mUploadLimited -> X
    int mWebseedsSendingToUs -> Y
    org.sugr.gearshift.Torrent$Peer[] mPeers -> Z
    int mPeerLimit -> aa
    android.text.Spanned mFilteredName -> ab
    android.text.Spanned mTrafficText -> ac
    android.text.Spanned mStatusText -> ad
    org.sugr.gearshift.TransmissionSession mSession -> ae
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    int getStatus() -> b
    int getStatus(boolean) -> a
    java.lang.String getName() -> c
    int getError() -> d
    java.lang.String getErrorString() -> e
    float getMetadataPercentComplete() -> f
    float getPercentDone() -> g
    long getEta() -> h
    boolean isFinished() -> i
    boolean isStalled() -> j
    int getPeersConnected() -> k
    int getPeersGettingFromUs() -> l
    int getPeersSendingToUs() -> m
    long getLeftUntilDone() -> n
    long getDesiredAvailable() -> o
    long getTotalSize() -> p
    long getSizeWhenDone() -> q
    long getRateDownload() -> r
    long getRateUpload() -> s
    int getQueuePosition() -> t
    float getRecheckProgress() -> u
    int getSeedRatioMode() -> v
    float getSeedRatioLimit() -> w
    long getUploadedEver() -> x
    float getUploadRatio() -> y
    long getAddedDate() -> z
    long getStartDate() -> A
    long getActivityDate() -> B
    long getCorruptEver() -> C
    java.lang.String getDownloadDir() -> D
    long getDownloadedEver() -> E
    long getHaveUnchecked() -> F
    long getHaveValid() -> G
    org.sugr.gearshift.Torrent$Tracker[] getTrackers() -> H
    org.sugr.gearshift.Torrent$TrackerStats[] getTrackerStats() -> I
    int getTorrentPriority() -> J
    java.lang.String getComment() -> K
    java.lang.String getCreator() -> L
    long getDateCreated() -> M
    long getDownloadLimit() -> N
    boolean isDownloadLimited() -> O
    org.sugr.gearshift.Torrent$File[] getFiles() -> P
    java.lang.String getHashString() -> Q
    boolean areSessionLimitsHonored() -> R
    boolean isPrivate() -> S
    int getPieceCount() -> T
    long getPieceSize() -> U
    long getUploadLimit() -> V
    boolean isUploadLimited() -> W
    org.sugr.gearshift.Torrent$FileStats[] getFileStats() -> X
    int getWebseedsSendingToUs() -> Y
    org.sugr.gearshift.Torrent$Peer[] getPeers() -> Z
    int getPeerLimit() -> aa
    void setStatus(int) -> a
    void setName(java.lang.String) -> a
    void setError(int) -> b
    void setErrorString(java.lang.String) -> b
    void setMetadataPercentComplete(float) -> a
    void setPercentDone(float) -> b
    void setEta(long) -> a
    void setFinished(boolean) -> b
    void setStalled(boolean) -> c
    void setPeersConnected(int) -> c
    void setPeersGettingFromUs(int) -> d
    void setPeersSendingToUs(int) -> e
    void setLeftUntilDone(long) -> b
    void setDesiredAvailable(long) -> c
    void setTotalSize(long) -> d
    void setSizeWhenDone(long) -> e
    void setRateDownload(long) -> f
    void setRateUpload(long) -> g
    void setQueuePosition(int) -> f
    void setRecheckProgress(float) -> c
    void setSeedRatioMode(int) -> g
    void setSeedRatioLimit(float) -> d
    void setUploadedEver(long) -> h
    void setUploadRatio(float) -> e
    void setAddedDate(long) -> i
    void setStartDate(long) -> j
    void setActivityDate(long) -> k
    void setCorruptEver(long) -> l
    void setDownloadDir(java.lang.String) -> c
    void setDownloadedEver(long) -> m
    void setHaveUnchecked(long) -> n
    void setHaveValid(long) -> o
    void setTrackers(org.sugr.gearshift.Torrent$Tracker[]) -> a
    void setTrackerStats(org.sugr.gearshift.Torrent$TrackerStats[]) -> a
    void setTorrentPriority(int) -> h
    void setComment(java.lang.String) -> d
    void setCreator(java.lang.String) -> e
    void setDateCreated(long) -> p
    void setDownloadLimit(long) -> q
    void setDownloadLimited(boolean) -> d
    void setFiles(org.sugr.gearshift.Torrent$File[]) -> a
    void setHashString(java.lang.String) -> f
    void setHonorsSessionLimits(boolean) -> e
    void setPrivate(boolean) -> f
    void setPieceCount(int) -> i
    void setPieceSize(long) -> r
    void setUploadLimit(long) -> s
    void setUploadLimited(boolean) -> g
    void setFileStats(org.sugr.gearshift.Torrent$FileStats[]) -> a
    void setWebseedsSendingToUs(int) -> j
    void setPeers(org.sugr.gearshift.Torrent$Peer[]) -> a
    void setPeerLimit(int) -> k
    boolean isPaused() -> ab
    boolean isActive() -> ac
    void setTrafficText(android.content.Context) -> a
    android.text.Spanned getFilteredName() -> ad
    void setFilteredName(android.text.Spanned) -> a
    android.text.Spanned getTrafficText() -> ae
    void setStatusText(android.content.Context) -> b
    android.text.Spanned getStatusText() -> af
    void setTransmissionSession(org.sugr.gearshift.TransmissionSession) -> a
    float getActiveSeedRatioLimit() -> ag
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void updateFrom(org.sugr.gearshift.Torrent,java.lang.String[]) -> a
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.CharSequence trimTrailingWhitespace(java.lang.CharSequence) -> a
org.sugr.gearshift.Torrent$1 -> org.sugr.gearshift.k:
    org.sugr.gearshift.Torrent createFromParcel(android.os.Parcel) -> a
    org.sugr.gearshift.Torrent[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.sugr.gearshift.Torrent$Fields -> org.sugr.gearshift.l:
    java.lang.String[] METADATA -> a
    java.lang.String[] STATS -> b
    java.lang.String[] INFO_EXTRA -> c
    java.lang.String[] STATS_EXTRA -> d
org.sugr.gearshift.Torrent$File -> org.sugr.gearshift.m:
    long mLength -> a
    java.lang.String mName -> b
    long getLength() -> a
    java.lang.String getName() -> b
org.sugr.gearshift.Torrent$FileStats -> org.sugr.gearshift.n:
    long mBytesCompleted -> a
    boolean mWanted -> b
    int mPriority -> c
    long getBytesCompleted() -> a
    int getPriority() -> b
    boolean isWanted() -> c
    void setPriority(int) -> a
org.sugr.gearshift.Torrent$Peer -> org.sugr.gearshift.o:
org.sugr.gearshift.Torrent$Tracker -> org.sugr.gearshift.p:
    int mId -> a
    java.lang.String mAnnounce -> b
    java.lang.String mScrape -> c
    int mTier -> d
    int getId() -> a
    java.lang.String getAnnounce() -> b
    java.lang.String getScrape() -> c
    int getTier() -> d
org.sugr.gearshift.Torrent$TrackerReplaceTuple -> org.sugr.gearshift.q:
    java.util.List ids -> a
    java.util.List urls -> b
    java.util.List getIds() -> a
    java.util.List getUrls() -> b
    void setIds(java.util.List) -> a
    void setUrls(java.util.List) -> b
org.sugr.gearshift.Torrent$TrackerStats -> org.sugr.gearshift.r:
    boolean mAnnounced -> a
    long mLastAnnouceTime -> b
    boolean mLastAnnouceSucceeded -> c
    int mLastAnnoucePeerCount -> d
    java.lang.String mLastAnnouceResult -> e
    boolean mScraped -> f
    long mLastScrapeTime -> g
    boolean mLastScrapeSucceeded -> h
    java.lang.String mLastScrapeResult -> i
    int mSeederCount -> j
    int mLeecherCount -> k
    boolean hasAnnounced() -> a
    long getLastAnnouceTime() -> b
    boolean hasLastAnnouceSucceeded() -> c
    int getLastAnnoucePeerCount() -> d
    java.lang.String getLastAnnouceResult() -> e
    boolean hasScraped() -> f
    long getLastScrapeTime() -> g
    boolean hasLastScrapeSucceeded() -> h
    java.lang.String getLastScrapeResult() -> i
    int getSeederCount() -> j
    int getLeecherCount() -> k
org.sugr.gearshift.TorrentComparator -> org.sugr.gearshift.s:
    org.sugr.gearshift.G$SortBy mSortBy -> a
    org.sugr.gearshift.G$SortOrder mSortOrder -> b
    org.sugr.gearshift.G$SortBy mBaseSort -> c
    org.sugr.gearshift.G$SortOrder mBaseSortOrder -> d
    void setSortingMethod(org.sugr.gearshift.G$SortBy,org.sugr.gearshift.G$SortOrder) -> a
    org.sugr.gearshift.G$SortBy getSortBy() -> a
    org.sugr.gearshift.G$SortOrder getSortOrder() -> b
    void setBaseSort(org.sugr.gearshift.G$SortBy,org.sugr.gearshift.G$SortOrder) -> b
    org.sugr.gearshift.G$SortBy getBaseSort() -> c
    org.sugr.gearshift.G$SortOrder getBaseSortOrder() -> d
    int compare(org.sugr.gearshift.Torrent,org.sugr.gearshift.Torrent) -> a
    int compare(org.sugr.gearshift.Torrent,org.sugr.gearshift.Torrent,org.sugr.gearshift.G$SortBy,org.sugr.gearshift.G$SortOrder) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.sugr.gearshift.TorrentComparator$1 -> org.sugr.gearshift.t:
    int[] $SwitchMap$org$sugr$gearshift$G$SortBy -> a
org.sugr.gearshift.TorrentDetailActivity -> org.sugr.gearshift.TorrentDetailActivity:
    boolean mRefreshing -> n
    java.util.ArrayList mTorrents -> o
    int mCurrentTorrent -> p
    org.sugr.gearshift.TransmissionProfile mProfile -> q
    org.sugr.gearshift.TransmissionSession mSession -> r
    android.support.v4.app.LoaderManager$LoaderCallbacks mTorrentLoaderCallbacks -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setTorrents(java.util.ArrayList) -> a
    java.util.ArrayList getTorrents() -> g
    org.sugr.gearshift.Torrent[] getCurrentTorrents() -> h
    void onPageSelected(int) -> a
    void setProfile(org.sugr.gearshift.TransmissionProfile) -> a
    org.sugr.gearshift.TransmissionProfile getProfile() -> i
    void setSession(org.sugr.gearshift.TransmissionSession) -> a
    org.sugr.gearshift.TransmissionSession getSession() -> j
    void setRefreshing(boolean) -> b
    org.sugr.gearshift.TransmissionProfile access$000(org.sugr.gearshift.TorrentDetailActivity) -> a
    org.sugr.gearshift.TransmissionSession access$100(org.sugr.gearshift.TorrentDetailActivity) -> b
    java.util.ArrayList access$200(org.sugr.gearshift.TorrentDetailActivity) -> c
    boolean access$300(org.sugr.gearshift.TorrentDetailActivity) -> d
    boolean access$302(org.sugr.gearshift.TorrentDetailActivity,boolean) -> a
org.sugr.gearshift.TorrentDetailActivity$1 -> org.sugr.gearshift.u:
    org.sugr.gearshift.TorrentDetailActivity this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,org.sugr.gearshift.TransmissionData) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
org.sugr.gearshift.TorrentDetailFragment -> org.sugr.gearshift.TorrentDetailFragment:
    org.sugr.gearshift.TorrentDetailFragment$PagerCallbacks mCallbacks -> a
    android.support.v4.view.ViewPager mPager -> b
    int mCurrentTorrentId -> c
    int mCurrentPosition -> d
    int mLocationPosition -> e
    int[] mActionMoveIds -> f
    org.sugr.gearshift.TorrentDetailFragment$PagerCallbacks sDummyCallbacks -> g
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    void onDetach() -> b
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onSaveInstanceState(android.os.Bundle) -> e
    void setCurrentTorrent(int) -> b
    void notifyTorrentListChanged(boolean,boolean,boolean) -> a
    boolean showMoveDialog(int[]) -> a
    android.support.v4.view.ViewPager access$000(org.sugr.gearshift.TorrentDetailFragment) -> a
    int access$100(org.sugr.gearshift.TorrentDetailFragment) -> b
    int access$102(org.sugr.gearshift.TorrentDetailFragment,int) -> a
    int access$202(org.sugr.gearshift.TorrentDetailFragment,int) -> b
    org.sugr.gearshift.TorrentDetailFragment$PagerCallbacks access$300(org.sugr.gearshift.TorrentDetailFragment) -> c
    int[] access$402(org.sugr.gearshift.TorrentDetailFragment,int[]) -> a
    int access$502(org.sugr.gearshift.TorrentDetailFragment,int) -> c
org.sugr.gearshift.TorrentDetailFragment$1 -> org.sugr.gearshift.v:
    void onPageSelected(int) -> a
org.sugr.gearshift.TorrentDetailFragment$2 -> org.sugr.gearshift.w:
    org.sugr.gearshift.TorrentDetailFragment this$0 -> a
    void onPageSelected(int) -> a
org.sugr.gearshift.TorrentDetailFragment$3 -> org.sugr.gearshift.x:
    android.support.v4.content.Loader val$loader -> a
    int[] val$ids -> b
    android.view.MenuItem val$item -> c
    org.sugr.gearshift.TransmissionSessionInterface val$context -> d
    org.sugr.gearshift.TorrentDetailFragment this$0 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentDetailFragment$4 -> org.sugr.gearshift.y:
    android.support.v4.content.Loader val$loader -> a
    int[] val$ids -> b
    org.sugr.gearshift.TransmissionSessionInterface val$context -> c
    org.sugr.gearshift.TorrentDetailFragment this$0 -> d
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentDetailFragment$5 -> org.sugr.gearshift.z:
    org.sugr.gearshift.TorrentDetailFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentDetailFragment$6 -> org.sugr.gearshift.aa:
    org.sugr.gearshift.TorrentDetailFragment this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.sugr.gearshift.TorrentDetailFragment$PagerCallbacks -> org.sugr.gearshift.ab:
    void onPageSelected(int) -> a
org.sugr.gearshift.TorrentDetailPageFragment -> org.sugr.gearshift.TorrentDetailPageFragment:
    org.sugr.gearshift.Torrent mTorrent -> a
    java.util.List mPriorityNames -> b
    java.util.List mPriorityValues -> c
    java.util.List mSeedRatioModeValues -> d
    java.lang.Object[] mTextValues -> e
    boolean[] mExpandedStates -> f
    android.view.View$OnClickListener mExpanderListener -> g
    org.sugr.gearshift.TorrentDetailPageFragment$FilesAdapter mFilesAdapter -> h
    org.sugr.gearshift.TorrentDetailPageFragment$FilesDataSetObserver mFilesObserver -> i
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter mTrackersAdapter -> Y
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersDataSetObserver mTrackersObserver -> Z
    android.view.ActionMode mFileActionMode -> aa
    java.util.Set mSelectedFiles -> ab
    android.view.ActionMode$Callback mActionModeFiles -> ac
    android.view.ActionMode mTrackerActionMode -> ad
    java.util.Set mSelectedTrackers -> ae
    android.view.ActionMode$Callback mActionModeTrackers -> af
    java.lang.Runnable mLoseFocus -> ag
    void onCreate(android.os.Bundle) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onSaveInstanceState(android.os.Bundle) -> e
    void notifyTorrentUpdate(org.sugr.gearshift.Torrent) -> a
    void onPageUnselected() -> a
    void setTorrentProperty(java.lang.String,java.lang.Object) -> a
    void updateFields(android.view.View) -> a
    void invalidateFileActionMenu(android.view.Menu) -> e
    boolean[] access$000(org.sugr.gearshift.TorrentDetailPageFragment) -> a
    void access$100(org.sugr.gearshift.TorrentDetailPageFragment,android.view.View) -> a
    android.view.ActionMode access$202(org.sugr.gearshift.TorrentDetailPageFragment,android.view.ActionMode) -> a
    java.util.Set access$300(org.sugr.gearshift.TorrentDetailPageFragment) -> b
    org.sugr.gearshift.TorrentDetailPageFragment$FilesAdapter access$400(org.sugr.gearshift.TorrentDetailPageFragment) -> c
    void access$500(org.sugr.gearshift.TorrentDetailPageFragment,android.view.Menu) -> a
    void access$600(org.sugr.gearshift.TorrentDetailPageFragment,java.lang.String,java.lang.Object) -> a
    android.view.ActionMode access$702(org.sugr.gearshift.TorrentDetailPageFragment,android.view.ActionMode) -> b
    java.util.Set access$800(org.sugr.gearshift.TorrentDetailPageFragment) -> d
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter access$900(org.sugr.gearshift.TorrentDetailPageFragment) -> e
    boolean[] access$002(org.sugr.gearshift.TorrentDetailPageFragment,boolean[]) -> a
    org.sugr.gearshift.Torrent access$1000(org.sugr.gearshift.TorrentDetailPageFragment) -> f
    java.util.List access$1100(org.sugr.gearshift.TorrentDetailPageFragment) -> g
    java.lang.Runnable access$1200(org.sugr.gearshift.TorrentDetailPageFragment) -> h
    java.util.List access$1300(org.sugr.gearshift.TorrentDetailPageFragment) -> i
    android.view.ActionMode access$200(org.sugr.gearshift.TorrentDetailPageFragment) -> j
    android.view.ActionMode$Callback access$1600(org.sugr.gearshift.TorrentDetailPageFragment) -> k
    java.util.List access$1700(org.sugr.gearshift.TorrentDetailPageFragment) -> l
    android.view.ActionMode access$700(org.sugr.gearshift.TorrentDetailPageFragment) -> m
    android.view.ActionMode$Callback access$1800(org.sugr.gearshift.TorrentDetailPageFragment) -> n
org.sugr.gearshift.TorrentDetailPageFragment$1 -> org.sugr.gearshift.ac:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$10 -> org.sugr.gearshift.ad:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TorrentDetailPageFragment$11 -> org.sugr.gearshift.ae:
    android.view.View val$root -> a
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TorrentDetailPageFragment$12 -> org.sugr.gearshift.af:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TorrentDetailPageFragment$13 -> org.sugr.gearshift.ag:
    android.view.View val$root -> a
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> b
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.sugr.gearshift.TorrentDetailPageFragment$14 -> org.sugr.gearshift.ah:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TorrentDetailPageFragment$15 -> org.sugr.gearshift.ai:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TorrentDetailPageFragment$16 -> org.sugr.gearshift.aj:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$16$1 -> org.sugr.gearshift.ak:
    java.util.List val$urls -> a
    org.sugr.gearshift.TorrentDetailPageFragment$16 this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$17 -> org.sugr.gearshift.al:
    android.widget.EditText val$queue -> a
    android.widget.EditText val$download -> b
    android.widget.EditText val$upload -> c
    android.widget.EditText val$ratio -> d
    android.widget.EditText val$peer -> e
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> f
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
org.sugr.gearshift.TorrentDetailPageFragment$2 -> org.sugr.gearshift.am:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
org.sugr.gearshift.TorrentDetailPageFragment$3 -> org.sugr.gearshift.an:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
org.sugr.gearshift.TorrentDetailPageFragment$4 -> org.sugr.gearshift.ao:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    void run() -> run
org.sugr.gearshift.TorrentDetailPageFragment$5 -> org.sugr.gearshift.ap:
    android.os.Bundle val$savedInstanceState -> a
    android.view.View val$root -> b
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> c
    void run() -> run
org.sugr.gearshift.TorrentDetailPageFragment$6 -> org.sugr.gearshift.aq:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TorrentDetailPageFragment$7 -> org.sugr.gearshift.ar:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.sugr.gearshift.TorrentDetailPageFragment$8 -> org.sugr.gearshift.as:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TorrentDetailPageFragment$9 -> org.sugr.gearshift.at:
    android.view.View val$root -> a
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> b
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TorrentDetailPageFragment$FilesAdapter -> org.sugr.gearshift.au:
    java.util.List mViews -> b
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    java.util.List getViews() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.sugr.gearshift.TorrentDetailPageFragment$FilesAdapter$1 -> org.sugr.gearshift.av:
    android.view.View val$container -> a
    org.sugr.gearshift.TorrentDetailPageFragment$TorrentFile val$file -> b
    org.sugr.gearshift.TorrentDetailPageFragment$FilesAdapter this$1 -> c
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TorrentDetailPageFragment$FilesAdapter$2 -> org.sugr.gearshift.aw:
    android.view.View val$container -> a
    org.sugr.gearshift.TorrentDetailPageFragment$FilesAdapter this$1 -> b
    boolean onLongClick(android.view.View) -> onLongClick
org.sugr.gearshift.TorrentDetailPageFragment$FilesDataSetObserver -> org.sugr.gearshift.ax:
    android.view.View mRoot -> b
    android.widget.LinearLayout mContainer -> c
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    boolean fileChanged(org.sugr.gearshift.TorrentDetailPageFragment$TorrentFile,org.sugr.gearshift.Torrent$File,org.sugr.gearshift.Torrent$FileStats) -> a
org.sugr.gearshift.TorrentDetailPageFragment$TorrentFile -> org.sugr.gearshift.ay:
    int index -> a
    org.sugr.gearshift.Torrent$File info -> b
    org.sugr.gearshift.Torrent$FileStats stat -> c
    java.lang.String directory -> d
    java.lang.String name -> e
    boolean changed -> f
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> g
    void setInfo(org.sugr.gearshift.Torrent$File) -> a
    void setStat(org.sugr.gearshift.Torrent$FileStats) -> a
org.sugr.gearshift.TorrentDetailPageFragment$TorrentFileComparator -> org.sugr.gearshift.az:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    int compare(org.sugr.gearshift.TorrentDetailPageFragment$TorrentFile,org.sugr.gearshift.TorrentDetailPageFragment$TorrentFile) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.sugr.gearshift.TorrentDetailPageFragment$Tracker -> org.sugr.gearshift.ba:
    int index -> a
    java.lang.String host -> b
    int id -> c
    java.lang.String announce -> d
    java.lang.String scrape -> e
    int tier -> f
    int seederCount -> g
    int leecherCount -> h
    boolean hasAnnounced -> i
    long lastAnnounceTime -> j
    boolean hasLastAnnounceSucceeded -> k
    int lastAnnouncePeerCount -> l
    java.lang.String lastAnnounceResult -> m
    boolean hasScraped -> n
    long lastScrapeTime -> o
    boolean hasLastScrapeSucceeded -> p
    java.lang.String lastScrapeResult -> q
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> r
    void setInfo(org.sugr.gearshift.Torrent$Tracker) -> a
    void setStat(org.sugr.gearshift.Torrent$TrackerStats) -> a
    void setIndex(int) -> a
org.sugr.gearshift.TorrentDetailPageFragment$TrackerComparator -> org.sugr.gearshift.bb:
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    int compare(org.sugr.gearshift.TorrentDetailPageFragment$Tracker,org.sugr.gearshift.TorrentDetailPageFragment$Tracker) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter -> org.sugr.gearshift.bc:
    java.util.List mViews -> b
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    java.util.List getViews() -> a
    void remove(org.sugr.gearshift.TorrentDetailPageFragment$Tracker) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void hideAllButtons(android.view.View) -> a
    void animateHideButtons(android.view.View) -> b
    void remove(java.lang.Object) -> remove
    void access$1900(org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter,android.view.View) -> a
    void access$2000(org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter,android.view.View) -> b
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$1 -> org.sugr.gearshift.bd:
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter this$1 -> a
    boolean onLongClick(android.view.View) -> onLongClick
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$2 -> org.sugr.gearshift.be:
    android.view.View val$buttons -> a
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter this$1 -> b
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$3 -> org.sugr.gearshift.bf:
    org.sugr.gearshift.TorrentDetailPageFragment$Tracker val$tracker -> a
    org.sugr.gearshift.TransmissionSessionInterface val$context -> b
    android.support.v4.content.Loader val$loader -> c
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter this$1 -> d
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$4 -> org.sugr.gearshift.bg:
    org.sugr.gearshift.TorrentDetailPageFragment$Tracker val$tracker -> a
    org.sugr.gearshift.TransmissionSessionInterface val$context -> b
    android.support.v4.content.Loader val$loader -> c
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter this$1 -> d
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$4$1 -> org.sugr.gearshift.bh:
    java.util.List val$urls -> a
    java.util.List val$ids -> b
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$4 this$2 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$5 -> org.sugr.gearshift.bi:
    org.sugr.gearshift.TorrentDetailPageFragment$Tracker val$tracker -> a
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter this$1 -> b
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter$6 -> org.sugr.gearshift.bj:
    android.view.View val$v -> a
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersAdapter this$1 -> b
    void run() -> run
org.sugr.gearshift.TorrentDetailPageFragment$TrackersDataSetObserver -> org.sugr.gearshift.bk:
    android.view.View mRoot -> b
    android.widget.LinearLayout mContainer -> c
    org.sugr.gearshift.TorrentDetailPageFragment this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    boolean trackerChanged(org.sugr.gearshift.TorrentDetailPageFragment$Tracker,org.sugr.gearshift.Torrent$Tracker,org.sugr.gearshift.Torrent$TrackerStats) -> a
    void animateRemoveView(android.view.View) -> a
    android.widget.LinearLayout access$2100(org.sugr.gearshift.TorrentDetailPageFragment$TrackersDataSetObserver) -> a
org.sugr.gearshift.TorrentDetailPageFragment$TrackersDataSetObserver$1 -> org.sugr.gearshift.bl:
    android.view.View val$v -> a
    org.sugr.gearshift.TorrentDetailPageFragment$TrackersDataSetObserver this$1 -> b
    void run() -> run
org.sugr.gearshift.TorrentDetailPagerAdapter -> org.sugr.gearshift.bm:
    java.util.ArrayList mFragments -> a
    org.sugr.gearshift.TransmissionSessionInterface mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int getCount() -> b
    android.support.v4.app.Fragment getItem(int) -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    java.util.List getFragments() -> c
org.sugr.gearshift.TorrentFileReadActivity -> org.sugr.gearshift.TorrentFileReadActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.sugr.gearshift.TorrentFileReadActivity$1 -> org.sugr.gearshift.bn:
org.sugr.gearshift.TorrentFileReadActivity$ReadDataAsyncTask -> org.sugr.gearshift.bo:
    android.net.Uri mUri -> b
    org.sugr.gearshift.TorrentFileReadActivity this$0 -> a
    org.sugr.gearshift.TorrentFileReadActivity$TaskData doInBackground(android.net.Uri[]) -> a
    void onPostExecute(org.sugr.gearshift.TorrentFileReadActivity$TaskData) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.sugr.gearshift.TorrentFileReadActivity$TaskData -> org.sugr.gearshift.bp:
    java.io.File file -> a
    java.lang.String path -> b
    org.sugr.gearshift.TorrentFileReadActivity this$0 -> c
org.sugr.gearshift.TorrentListActivity -> org.sugr.gearshift.TorrentListActivity:
    boolean mTwoPane -> n
    java.util.ArrayList mTorrents -> o
    org.sugr.gearshift.TransmissionProfile mProfile -> p
    org.sugr.gearshift.TransmissionSession mSession -> q
    boolean mIntentConsumed -> r
    boolean mDialogShown -> s
    android.support.v4.widget.DrawerLayout mDrawerLayout -> t
    android.support.v4.app.ActionBarDrawerToggle mDrawerToggle -> u
    android.animation.ValueAnimator mDetailSlideAnimator -> v
    boolean mDetailPanelShown -> w
    android.os.Bundle mDetailArguments -> x
    int mLocationPosition -> y
    android.content.SharedPreferences mSharedPrefs -> z
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onItemSelected(org.sugr.gearshift.Torrent) -> a
    void onPageSelected(int) -> a
    void onBackPressed() -> onBackPressed
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean isDetailPanelShown() -> k
    boolean toggleRightPane(boolean) -> c
    void setTorrents(java.util.ArrayList) -> a
    java.util.ArrayList getTorrents() -> g
    org.sugr.gearshift.Torrent[] getCurrentTorrents() -> h
    void setProfile(org.sugr.gearshift.TransmissionProfile) -> a
    org.sugr.gearshift.TransmissionProfile getProfile() -> i
    void setSession(org.sugr.gearshift.TransmissionSession) -> a
    org.sugr.gearshift.TransmissionSession getSession() -> j
    void setRefreshing(boolean) -> b
    void consumeIntent() -> l
    android.os.Bundle access$000(org.sugr.gearshift.TorrentListActivity) -> a
    boolean access$102(org.sugr.gearshift.TorrentListActivity,boolean) -> a
    boolean access$202(org.sugr.gearshift.TorrentListActivity,boolean) -> b
    int access$302(org.sugr.gearshift.TorrentListActivity,int) -> a
org.sugr.gearshift.TorrentListActivity$1 -> org.sugr.gearshift.bq:
    org.sugr.gearshift.TorrentListActivity this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
org.sugr.gearshift.TorrentListActivity$1$1 -> org.sugr.gearshift.br:
    org.sugr.gearshift.TorrentListActivity$1 this$1 -> a
    void run() -> run
org.sugr.gearshift.TorrentListActivity$2 -> org.sugr.gearshift.bs:
    android.view.View val$detailPanel -> a
    android.widget.LinearLayout val$slidingLayout -> b
    org.sugr.gearshift.TorrentListActivity this$0 -> c
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
org.sugr.gearshift.TorrentListActivity$3 -> org.sugr.gearshift.bt:
    org.sugr.gearshift.TorrentListActivity this$0 -> a
org.sugr.gearshift.TorrentListActivity$4 -> org.sugr.gearshift.bu:
    org.sugr.gearshift.TorrentListActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentListActivity$5 -> org.sugr.gearshift.bv:
    org.sugr.gearshift.TorrentListActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.sugr.gearshift.TorrentListActivity$6 -> org.sugr.gearshift.bw:
    android.support.v4.content.Loader val$loader -> a
    android.net.Uri val$data -> b
    org.sugr.gearshift.TorrentListActivity this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentListActivity$7 -> org.sugr.gearshift.bx:
    java.lang.String val$fileURI -> a
    java.lang.String val$filePath -> b
    android.widget.CheckBox val$deleteLocal -> c
    android.support.v4.content.Loader val$loader -> d
    org.sugr.gearshift.TorrentListActivity this$0 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentListFragment -> org.sugr.gearshift.TorrentListFragment:
    org.sugr.gearshift.TorrentListFragment$Callbacks mCallbacks -> i
    int mActivatedPosition -> Y
    boolean mAltSpeed -> Z
    boolean mRefreshing -> aa
    android.view.ActionMode mActionMode -> ab
    int mChoiceMode -> ac
    org.sugr.gearshift.TorrentListFragment$TransmissionProfileListAdapter mProfileAdapter -> ad
    org.sugr.gearshift.TorrentListFragment$TorrentListAdapter mTorrentListAdapter -> ae
    org.sugr.gearshift.TransmissionProfile mProfile -> af
    org.sugr.gearshift.TransmissionSession mSession -> ag
    boolean mScrollToTop -> ah
    boolean mFindShown -> ai
    java.lang.String mFindQuery -> aj
    android.content.SharedPreferences mSharedPrefs -> ak
    boolean mPreventRefreshIndicator -> al
    int mExpecting -> am
    org.sugr.gearshift.TorrentListFragment$Callbacks sDummyCallbacks -> an
    android.support.v4.app.LoaderManager$LoaderCallbacks mProfileLoaderCallbacks -> ao
    android.support.v4.app.LoaderManager$LoaderCallbacks mTorrentLoaderCallbacks -> ap
    android.widget.AbsListView$MultiChoiceModeListener mListChoiceListener -> aq
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mProfileChangeListener -> ar
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mSettingsChangeListener -> as
    android.os.Handler mFindHandler -> at
    java.lang.Runnable mFindRunnable -> au
    void onCreate(android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onAttach(android.app.Activity) -> a
    void onDetach() -> b
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> a
    void onSaveInstanceState(android.os.Bundle) -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void setEmptyText(int) -> b
    void setActivateOnItemClick(boolean) -> a
    void setListFilter(java.lang.String) -> a
    void setListFilter(org.sugr.gearshift.G$FilterBy) -> a
    void setListFilter(org.sugr.gearshift.G$SortBy) -> a
    void setListFilter(org.sugr.gearshift.G$SortOrder) -> a
    void setListDirectoryFilter(java.lang.String) -> b
    void setListTrackerFilter(java.lang.String) -> c
    void setRefreshing(boolean) -> f
    void showFind() -> C
    boolean isFindShown() -> D
    void setActivatedPosition(int) -> c
    boolean showMoveDialog(int[]) -> a
    void updateStatus(java.util.ArrayList,org.sugr.gearshift.TransmissionSession) -> a
    org.sugr.gearshift.TransmissionProfile access$000(org.sugr.gearshift.TorrentListFragment) -> a
    org.sugr.gearshift.TransmissionProfile access$002(org.sugr.gearshift.TorrentListFragment,org.sugr.gearshift.TransmissionProfile) -> a
    org.sugr.gearshift.TorrentListFragment$TransmissionProfileListAdapter access$100(org.sugr.gearshift.TorrentListFragment) -> b
    boolean access$202(org.sugr.gearshift.TorrentListFragment,boolean) -> a
    boolean access$302(org.sugr.gearshift.TorrentListFragment,boolean) -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks access$400(org.sugr.gearshift.TorrentListFragment) -> c
    org.sugr.gearshift.TransmissionSession access$502(org.sugr.gearshift.TorrentListFragment,org.sugr.gearshift.TransmissionSession) -> a
    org.sugr.gearshift.TransmissionSession access$500(org.sugr.gearshift.TorrentListFragment) -> d
    boolean access$600(org.sugr.gearshift.TorrentListFragment) -> e
    int access$772(org.sugr.gearshift.TorrentListFragment,int) -> a
    int access$700(org.sugr.gearshift.TorrentListFragment) -> f
    boolean access$602(org.sugr.gearshift.TorrentListFragment,boolean) -> c
    org.sugr.gearshift.TorrentListFragment$TorrentListAdapter access$800(org.sugr.gearshift.TorrentListFragment) -> g
    int access$702(org.sugr.gearshift.TorrentListFragment,int) -> b
    android.view.ActionMode access$900(org.sugr.gearshift.TorrentListFragment) -> h
    android.view.ActionMode access$902(org.sugr.gearshift.TorrentListFragment,android.view.ActionMode) -> a
    void access$1000(org.sugr.gearshift.TorrentListFragment,java.util.ArrayList,org.sugr.gearshift.TransmissionSession) -> a
    boolean access$200(org.sugr.gearshift.TorrentListFragment) -> i
    boolean access$1100(org.sugr.gearshift.TorrentListFragment,int[]) -> a
    java.lang.String access$1200(org.sugr.gearshift.TorrentListFragment) -> j
    android.content.SharedPreferences$OnSharedPreferenceChangeListener access$1300(org.sugr.gearshift.TorrentListFragment) -> k
    boolean access$300(org.sugr.gearshift.TorrentListFragment) -> l
    void access$1400(org.sugr.gearshift.TorrentListFragment,int) -> c
    java.lang.String access$1202(org.sugr.gearshift.TorrentListFragment,java.lang.String) -> a
    boolean access$1502(org.sugr.gearshift.TorrentListFragment,boolean) -> d
    java.lang.Runnable access$1600(org.sugr.gearshift.TorrentListFragment) -> m
    android.os.Handler access$1700(org.sugr.gearshift.TorrentListFragment) -> n
    android.content.SharedPreferences access$1800(org.sugr.gearshift.TorrentListFragment) -> o
    boolean access$2700(org.sugr.gearshift.TorrentListFragment) -> p
    boolean access$2702(org.sugr.gearshift.TorrentListFragment,boolean) -> e
org.sugr.gearshift.TorrentListFragment$1 -> org.sugr.gearshift.by:
    void onItemSelected(org.sugr.gearshift.Torrent) -> a
org.sugr.gearshift.TorrentListFragment$10 -> org.sugr.gearshift.bz:
    android.widget.ListView val$list -> a
    org.sugr.gearshift.TorrentListFragment this$0 -> b
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
org.sugr.gearshift.TorrentListFragment$11 -> org.sugr.gearshift.ca:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
org.sugr.gearshift.TorrentListFragment$12 -> org.sugr.gearshift.cb:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
org.sugr.gearshift.TorrentListFragment$13 -> org.sugr.gearshift.cc:
    android.support.v4.content.Loader val$loader -> a
    int[] val$ids -> b
    org.sugr.gearshift.TorrentListFragment this$0 -> c
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentListFragment$2 -> org.sugr.gearshift.cd:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,org.sugr.gearshift.TransmissionProfile[]) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
org.sugr.gearshift.TorrentListFragment$3 -> org.sugr.gearshift.ce:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,org.sugr.gearshift.TransmissionData) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
org.sugr.gearshift.TorrentListFragment$4 -> org.sugr.gearshift.cf:
    java.util.HashSet mSelectedTorrentIds -> b
    boolean hasQueued -> c
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean) -> onItemCheckedStateChanged
org.sugr.gearshift.TorrentListFragment$4$1 -> org.sugr.gearshift.cg:
    android.support.v4.content.Loader val$loader -> a
    int[] val$ids -> b
    android.view.MenuItem val$item -> c
    android.view.ActionMode val$mode -> d
    org.sugr.gearshift.TorrentListFragment$4 this$1 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TorrentListFragment$5 -> org.sugr.gearshift.ch:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.TorrentListFragment$6 -> org.sugr.gearshift.ci:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.TorrentListFragment$7 -> org.sugr.gearshift.cj:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    void run() -> run
org.sugr.gearshift.TorrentListFragment$8 -> org.sugr.gearshift.ck:
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
org.sugr.gearshift.TorrentListFragment$9 -> org.sugr.gearshift.cl:
    android.os.Bundle val$savedInstanceState -> a
    org.sugr.gearshift.TorrentListFragment this$0 -> b
    void run() -> run
org.sugr.gearshift.TorrentListFragment$Callbacks -> org.sugr.gearshift.cm:
    void onItemSelected(org.sugr.gearshift.Torrent) -> a
org.sugr.gearshift.TorrentListFragment$Expecting -> org.sugr.gearshift.cn:
    int ALT_SPEED_ON -> a
    int ALT_SPEED_OFF -> b
org.sugr.gearshift.TorrentListFragment$TorrentListAdapter -> org.sugr.gearshift.co:
    java.lang.Object mLock -> b
    java.util.ArrayList mObjects -> c
    java.util.ArrayList mOriginalValues -> d
    org.sugr.gearshift.TorrentListFragment$TorrentListAdapter$TorrentFilter mFilter -> e
    java.lang.CharSequence mCurrentConstraint -> f
    org.sugr.gearshift.TorrentComparator mTorrentComparator -> g
    org.sugr.gearshift.G$FilterBy mFilterBy -> h
    org.sugr.gearshift.G$SortBy mSortBy -> i
    org.sugr.gearshift.G$SortBy mBaseSort -> j
    org.sugr.gearshift.G$SortOrder mSortOrder -> k
    org.sugr.gearshift.G$SortOrder mBaseSortOrder -> l
    java.lang.String mDirectory -> m
    java.lang.String mTracker -> n
    android.util.SparseBooleanArray mTorrentAdded -> o
    org.sugr.gearshift.TorrentListFragment this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void addAll(java.util.Collection) -> addAll
    void clear() -> clear
    int getCount() -> getCount
    int getUnfilteredCount() -> a
    java.util.ArrayList getUnfilteredItems() -> b
    org.sugr.gearshift.Torrent getItem(int) -> a
    int getPosition(org.sugr.gearshift.Torrent) -> a
    android.widget.Filter getFilter() -> getFilter
    void filter(java.lang.String) -> a
    void filter(org.sugr.gearshift.G$FilterBy) -> a
    void filter(org.sugr.gearshift.G$SortBy) -> a
    void filter(org.sugr.gearshift.G$SortOrder) -> a
    void filterDirectory(java.lang.String) -> b
    void filterTracker(java.lang.String) -> c
    void repeatFilter() -> c
    void resetBaseSort() -> d
    org.sugr.gearshift.G$SortBy getBaseSort() -> e
    org.sugr.gearshift.G$SortOrder getBaseSortOrder() -> f
    void applyFilter(java.lang.String,java.lang.String,boolean) -> a
    void applyFilter(java.lang.String,java.lang.String) -> a
    int getPosition(java.lang.Object) -> getPosition
    java.lang.Object getItem(int) -> getItem
    java.util.ArrayList access$2000(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter) -> a
    java.lang.Object access$2100(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter) -> b
    java.util.ArrayList access$2002(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter,java.util.ArrayList) -> a
    java.util.ArrayList access$2200(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter) -> c
    org.sugr.gearshift.G$FilterBy access$2300(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter) -> d
    java.lang.String access$2400(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter) -> e
    java.lang.String access$2500(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter) -> f
    org.sugr.gearshift.TorrentComparator access$2600(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter) -> g
    java.util.ArrayList access$2202(org.sugr.gearshift.TorrentListFragment$TorrentListAdapter,java.util.ArrayList) -> b
org.sugr.gearshift.TorrentListFragment$TorrentListAdapter$TorrentFilter -> org.sugr.gearshift.cp:
    org.sugr.gearshift.TorrentListFragment$TorrentListAdapter this$1 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
org.sugr.gearshift.TorrentListFragment$TransmissionProfileListAdapter -> org.sugr.gearshift.cq:
    org.sugr.gearshift.TransmissionProfile EMPTY_PROFILE -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
org.sugr.gearshift.TorrentListMenuFragment -> org.sugr.gearshift.TorrentListMenuFragment:
    android.widget.ListView mFilterList -> a
    android.view.View mFooter -> b
    org.sugr.gearshift.TorrentListMenuFragment$FilterAdapter mFilterAdapter -> c
    int mFilterPosition -> d
    int mSortPosition -> e
    int mOrderPosition -> f
    int mDirectoryPosition -> g
    int mTrackerPosition -> h
    java.util.TreeSet mDirectories -> i
    java.util.TreeSet mTrackers -> Y
    java.util.HashMap mListItemMap -> Z
    android.content.SharedPreferences mSharedPrefs -> aa
    android.os.Handler mCloseHandler -> ab
    java.lang.Runnable mCloseRunnable -> ac
    boolean mFiltersChanged -> ad
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mSharedPrefListener -> ae
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> o
    void notifyTorrentListUpdate(java.util.ArrayList,org.sugr.gearshift.TransmissionSession,boolean) -> a
    void setStatus(java.lang.Object[],java.lang.String) -> a
    void setActivatedPosition(int) -> b
    void fillMenuItems() -> a
    void checkSelectedItems() -> C
    org.sugr.gearshift.TorrentListMenuFragment$ListItem getDirectoryItem(java.lang.String) -> a
    int removeDirectoriesFilters() -> D
    org.sugr.gearshift.TorrentListMenuFragment$ListItem getTrackerItem(java.lang.String) -> b
    int removeTrackersFilters() -> E
    boolean access$002(org.sugr.gearshift.TorrentListMenuFragment,boolean) -> a
    android.widget.ListView access$100(org.sugr.gearshift.TorrentListMenuFragment) -> a
    android.view.View access$200(org.sugr.gearshift.TorrentListMenuFragment) -> b
    void access$300(org.sugr.gearshift.TorrentListMenuFragment,int) -> a
    java.util.HashMap access$400(org.sugr.gearshift.TorrentListMenuFragment) -> c
org.sugr.gearshift.TorrentListMenuFragment$1 -> org.sugr.gearshift.cr:
    org.sugr.gearshift.TorrentListMenuFragment this$0 -> a
    void run() -> run
org.sugr.gearshift.TorrentListMenuFragment$2 -> org.sugr.gearshift.cs:
    org.sugr.gearshift.TorrentListMenuFragment this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.TorrentListMenuFragment$3 -> org.sugr.gearshift.ct:
    org.sugr.gearshift.TorrentListMenuFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.sugr.gearshift.TorrentListMenuFragment$4 -> org.sugr.gearshift.cu:
    int[] $SwitchMap$org$sugr$gearshift$TorrentListMenuFragment$Type -> a
    int[] $SwitchMap$org$sugr$gearshift$G$FilterBy -> b
    int[] $SwitchMap$org$sugr$gearshift$G$SortBy -> c
org.sugr.gearshift.TorrentListMenuFragment$FilterAdapter -> org.sugr.gearshift.cv:
    android.view.LayoutInflater mInflater -> a
    int getItemViewType(int) -> getItemViewType
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.sugr.gearshift.TorrentListMenuFragment$ListItem -> org.sugr.gearshift.cw:
    org.sugr.gearshift.TorrentListMenuFragment$Type mType -> b
    java.lang.Enum mValue -> c
    java.lang.String mValueString -> d
    java.lang.String mLabel -> e
    java.lang.String mPref -> f
    org.sugr.gearshift.TorrentListMenuFragment this$0 -> a
    org.sugr.gearshift.TorrentListMenuFragment$Type getType() -> a
    java.lang.Enum getValue() -> b
    java.lang.String getValueString() -> c
    java.lang.String getLabel() -> d
    java.lang.String getPreferenceKey() -> e
org.sugr.gearshift.TorrentListMenuFragment$Type -> org.sugr.gearshift.cx:
    org.sugr.gearshift.TorrentListMenuFragment$Type FIND -> a
    org.sugr.gearshift.TorrentListMenuFragment$Type FILTER -> b
    org.sugr.gearshift.TorrentListMenuFragment$Type DIRECTORY -> c
    org.sugr.gearshift.TorrentListMenuFragment$Type TRACKER -> d
    org.sugr.gearshift.TorrentListMenuFragment$Type SORT_BY -> e
    org.sugr.gearshift.TorrentListMenuFragment$Type SORT_ORDER -> f
    org.sugr.gearshift.TorrentListMenuFragment$Type HEADER -> g
    org.sugr.gearshift.TorrentListMenuFragment$Type[] $VALUES -> h
    org.sugr.gearshift.TorrentListMenuFragment$Type[] values() -> values
    org.sugr.gearshift.TorrentListMenuFragment$Type valueOf(java.lang.String) -> valueOf
org.sugr.gearshift.TransmissionData -> org.sugr.gearshift.cy:
    org.sugr.gearshift.TransmissionSession session -> a
    org.sugr.gearshift.TransmissionSessionStats stats -> b
    java.util.ArrayList torrents -> c
    int error -> d
    boolean hasRemoved -> e
    boolean hasAdded -> f
    boolean hasStatusChanged -> g
    boolean hasMetadataNeeded -> h
org.sugr.gearshift.TransmissionDataLoader -> org.sugr.gearshift.cz:
    android.util.SparseArray mTorrentMap -> n
    org.sugr.gearshift.TransmissionProfile mProfile -> o
    org.sugr.gearshift.TransmissionSession mSession -> p
    org.sugr.gearshift.TransmissionSessionStats mSessionStats -> q
    int mLastError -> r
    org.sugr.gearshift.TransmissionSessionManager mSessManager -> s
    org.sugr.gearshift.Torrent[] mCurrentTorrents -> t
    boolean mAllCurrent -> u
    int mIteration -> v
    boolean mStopUpdates -> w
    android.content.SharedPreferences mDefaultPrefs -> x
    boolean mProfileChanged -> y
    boolean mNeedsMoreInfo -> z
    android.os.Handler mIntervalHandler -> A
    java.lang.Runnable mIntervalRunner -> B
    org.sugr.gearshift.TransmissionSession mSessionSet -> C
    java.lang.String[] mSessionSetKeys -> D
    java.lang.String mTorrentAction -> E
    int[] mTorrentActionIds -> F
    boolean mDeleteData -> G
    java.lang.String mTorrentLocation -> H
    java.lang.String mTorrentSetKey -> I
    java.lang.Object mTorrentSetValue -> J
    boolean mMoveData -> K
    java.lang.String mTorrentAddUri -> L
    java.lang.String mTorrentAddData -> M
    boolean mTorrentAddPaused -> N
    java.lang.String mTorrentAddDeleteLocal -> O
    int mNewTorrentAdded -> P
    java.lang.Object mLock -> Q
    void setProfile(org.sugr.gearshift.TransmissionProfile) -> a
    void setCurrentTorrents(org.sugr.gearshift.Torrent[]) -> a
    void setAllCurrentTorrents(boolean) -> a
    void setSession(org.sugr.gearshift.TransmissionSession,java.lang.String[]) -> a
    void setTorrentsRemove(int[],boolean) -> a
    void setTorrentsAction(java.lang.String,int[]) -> a
    void setTorrentsLocation(int[],java.lang.String,boolean) -> a
    void setTorrentProperty(int,java.lang.String,java.lang.Object) -> a
    void addTorrent(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> a
    org.sugr.gearshift.TransmissionData loadInBackground() -> w
    void deliverResult(org.sugr.gearshift.TransmissionData) -> a
    void onStartLoading() -> k
    void onStopLoading() -> n
    void onReset() -> r
    void repeatLoading() -> x
    org.sugr.gearshift.TransmissionData executeTorrentsAction(int[],java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean,boolean) -> a
    org.sugr.gearshift.TransmissionData handleError(org.sugr.gearshift.TransmissionSessionManager$ManagerException) -> a
    org.sugr.gearshift.TransmissionData handleError(java.lang.InterruptedException) -> a
    java.util.ArrayList convertSparseArray(android.util.SparseArray) -> a
    java.lang.String[] concat(java.lang.String[][]) -> a
    java.lang.Object loadInBackground() -> d
    void deliverResult(java.lang.Object) -> b
    org.sugr.gearshift.TransmissionProfile access$000(org.sugr.gearshift.TransmissionDataLoader) -> a
    boolean access$100(org.sugr.gearshift.TransmissionDataLoader) -> b
    java.lang.Object access$200(org.sugr.gearshift.TransmissionDataLoader) -> c
    org.sugr.gearshift.TransmissionSession access$300(org.sugr.gearshift.TransmissionDataLoader) -> d
    java.lang.String[] access$400(org.sugr.gearshift.TransmissionDataLoader) -> e
    org.sugr.gearshift.TransmissionSessionManager access$500(org.sugr.gearshift.TransmissionDataLoader) -> f
    org.sugr.gearshift.TransmissionSession access$302(org.sugr.gearshift.TransmissionDataLoader,org.sugr.gearshift.TransmissionSession) -> a
    java.lang.String[] access$402(org.sugr.gearshift.TransmissionDataLoader,java.lang.String[]) -> a
    org.sugr.gearshift.TransmissionSession access$602(org.sugr.gearshift.TransmissionDataLoader,org.sugr.gearshift.TransmissionSession) -> b
    org.sugr.gearshift.TransmissionSessionStats access$702(org.sugr.gearshift.TransmissionDataLoader,org.sugr.gearshift.TransmissionSessionStats) -> a
    java.lang.String access$800(org.sugr.gearshift.TransmissionDataLoader) -> g
    java.lang.String access$900(org.sugr.gearshift.TransmissionDataLoader) -> h
    java.lang.String access$1000(org.sugr.gearshift.TransmissionDataLoader) -> i
    boolean access$1100(org.sugr.gearshift.TransmissionDataLoader) -> j
    int access$1202(org.sugr.gearshift.TransmissionDataLoader,int) -> a
    android.util.SparseArray access$1300(org.sugr.gearshift.TransmissionDataLoader) -> k
    java.lang.String access$1400(org.sugr.gearshift.TransmissionDataLoader) -> l
    java.lang.String access$802(org.sugr.gearshift.TransmissionDataLoader,java.lang.String) -> a
    java.lang.String access$902(org.sugr.gearshift.TransmissionDataLoader,java.lang.String) -> b
    java.lang.String access$1402(org.sugr.gearshift.TransmissionDataLoader,java.lang.String) -> c
    org.sugr.gearshift.TransmissionSession access$600(org.sugr.gearshift.TransmissionDataLoader) -> m
    org.sugr.gearshift.TransmissionData access$1500(org.sugr.gearshift.TransmissionDataLoader,int[],java.lang.String,java.lang.String,java.lang.String,java.lang.Object,boolean,boolean) -> a
org.sugr.gearshift.TransmissionDataLoader$1 -> org.sugr.gearshift.da:
    org.sugr.gearshift.TransmissionDataLoader this$0 -> a
    void run() -> run
org.sugr.gearshift.TransmissionDataLoader$2 -> org.sugr.gearshift.db:
    java.util.ArrayList val$exceptions -> a
    org.sugr.gearshift.TransmissionDataLoader this$0 -> b
    void run() -> run
org.sugr.gearshift.TransmissionDataLoader$3 -> org.sugr.gearshift.dc:
    java.util.ArrayList val$exceptions -> a
    org.sugr.gearshift.TransmissionDataLoader this$0 -> b
    void run() -> run
org.sugr.gearshift.TransmissionDataLoader$4 -> org.sugr.gearshift.dd:
    java.util.ArrayList val$exceptions -> a
    org.sugr.gearshift.TransmissionDataLoader this$0 -> b
    void run() -> run
org.sugr.gearshift.TransmissionDataLoader$5 -> org.sugr.gearshift.de:
    java.util.ArrayList val$exceptions -> a
    org.sugr.gearshift.TransmissionDataLoader this$0 -> b
    void run() -> run
org.sugr.gearshift.TransmissionDataLoader$6 -> org.sugr.gearshift.df:
    java.util.ArrayList val$exceptions -> a
    org.sugr.gearshift.TransmissionDataLoader this$0 -> b
    void run() -> run
org.sugr.gearshift.TransmissionDataLoader$TorrentActionRunnable -> org.sugr.gearshift.dg:
    java.lang.String action -> b
    java.lang.String location -> c
    java.lang.String setKey -> d
    boolean deleteData -> e
    boolean moveData -> f
    int[] ids -> g
    java.lang.Object setValue -> h
    org.sugr.gearshift.TransmissionDataLoader this$0 -> a
    void run() -> run
org.sugr.gearshift.TransmissionProfile -> org.sugr.gearshift.TransmissionProfile:
    java.lang.String mId -> a
    java.lang.String mName -> b
    java.lang.String mHost -> c
    int mPort -> d
    java.lang.String mPath -> e
    java.lang.String mUsername -> f
    java.lang.String mPassword -> g
    java.lang.String mLastDirectory -> h
    boolean mUseSSL -> i
    int mTimeout -> j
    int mRetries -> k
    java.util.Set mDirectories -> l
    android.content.Context mContext -> m
    android.os.Parcelable$Creator CREATOR -> CREATOR
    org.sugr.gearshift.TransmissionProfile[] readProfiles(android.content.Context) -> a
    java.lang.String getCurrentProfileId(android.content.Context) -> b
    void setCurrentProfile(org.sugr.gearshift.TransmissionProfile,android.content.Context) -> a
    java.lang.String generateId() -> a
    android.content.SharedPreferences getPreferences(android.content.Context) -> c
    void cleanTemporaryPreferences(android.content.Context) -> d
    java.lang.String getId() -> b
    java.lang.String getName() -> c
    java.lang.String getHost() -> d
    int getPort() -> e
    java.lang.String getPath() -> f
    java.lang.String getUsername() -> g
    java.lang.String getPassword() -> h
    boolean isUseSSL() -> i
    int getTimeout() -> j
    java.util.Set getDirectories() -> k
    void load() -> l
    void load(boolean) -> a
    void save() -> m
    void save(boolean) -> b
    void delete() -> n
    void fillTemporatyPreferences() -> o
    java.lang.String getLastDownloadDirectory() -> p
    void setLastDownloadDirectory(java.lang.String) -> a
    void setContext(android.content.Context) -> e
    int compareTo(org.sugr.gearshift.TransmissionProfile) -> a
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.content.SharedPreferences getLegacyPreferences(android.content.Context) -> f
    java.lang.String getPrefName(java.lang.String,boolean,boolean) -> a
    int compareTo(java.lang.Object) -> compareTo
org.sugr.gearshift.TransmissionProfile$1 -> org.sugr.gearshift.dh:
    org.sugr.gearshift.TransmissionProfile createFromParcel(android.os.Parcel) -> a
    org.sugr.gearshift.TransmissionProfile[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment -> org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment:
    android.content.SharedPreferences mSharedPrefs -> a
    java.util.Set mDirectories -> b
    android.widget.ArrayAdapter mAdapter -> c
    java.lang.String mProfileId -> d
    android.view.ActionMode mActionMode -> e
    java.util.Comparator mDirComparator -> f
    java.util.ArrayList mSessionDirectories -> g
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setEmptyText(int) -> a
    void createEntryDialog(android.content.DialogInterface$OnClickListener) -> a
    void createEntryDialog(android.content.DialogInterface$OnClickListener,java.lang.String) -> a
    void setAdapterDirectories() -> a
    android.view.ActionMode access$002(org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment,android.view.ActionMode) -> a
    android.widget.ArrayAdapter access$100(org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment) -> a
    java.util.Set access$300(org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment) -> b
    void access$400(org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment) -> c
org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$1 -> org.sugr.gearshift.di:
    org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment this$0 -> a
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$2 -> org.sugr.gearshift.dj:
    android.widget.ListView val$list -> a
    org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment this$0 -> b
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$3 -> org.sugr.gearshift.dk:
    java.util.Set mSelectedDirectories -> b
    org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean) -> onItemCheckedStateChanged
    java.util.Set access$200(org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$3) -> a
org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$3$1 -> org.sugr.gearshift.dl:
    android.view.ActionMode val$mode -> a
    org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$3 this$1 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$4 -> org.sugr.gearshift.dm:
    org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment$5 -> org.sugr.gearshift.dn:
    java.lang.String val$directory -> a
    org.sugr.gearshift.TransmissionProfileDirectoriesSettingsFragment this$0 -> b
    void onClick(android.content.DialogInterface,int) -> onClick
org.sugr.gearshift.TransmissionProfileDirectoryAdapter -> org.sugr.gearshift.do:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    void sort() -> a
org.sugr.gearshift.TransmissionProfileLoader -> org.sugr.gearshift.dp:
    org.sugr.gearshift.TransmissionProfile[] mProfiles -> a
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mListener -> b
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mDefaultListener -> c
    org.sugr.gearshift.TransmissionProfile[] loadInBackground() -> a
    void deliverResult(org.sugr.gearshift.TransmissionProfile[]) -> a
    void onCanceled(org.sugr.gearshift.TransmissionProfile[]) -> b
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onReset() -> onReset
    void onReleaseResources() -> b
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
org.sugr.gearshift.TransmissionProfileLoader$1 -> org.sugr.gearshift.dq:
    org.sugr.gearshift.TransmissionProfileLoader this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.TransmissionProfileLoader$2 -> org.sugr.gearshift.dr:
    org.sugr.gearshift.TransmissionProfileLoader this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.TransmissionProfileSettingsFragment -> org.sugr.gearshift.TransmissionProfileSettingsFragment:
    org.sugr.gearshift.TransmissionProfile mProfile -> c
    boolean mDeleted -> d
    boolean mSaved -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDestroy() -> onDestroy
    boolean access$002(org.sugr.gearshift.TransmissionProfileSettingsFragment,boolean) -> a
org.sugr.gearshift.TransmissionProfileSettingsFragment$1 -> org.sugr.gearshift.ds:
    org.sugr.gearshift.TransmissionProfileSettingsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TransmissionProfileSupportLoader -> org.sugr.gearshift.dt:
    org.sugr.gearshift.TransmissionProfile[] mProfiles -> n
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mListener -> o
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mDefaultListener -> p
    org.sugr.gearshift.TransmissionProfile[] loadInBackground() -> w
    void deliverResult(org.sugr.gearshift.TransmissionProfile[]) -> a
    void onCanceled(org.sugr.gearshift.TransmissionProfile[]) -> b
    void onStartLoading() -> k
    void onStopLoading() -> n
    void onReset() -> r
    void onReleaseResources() -> x
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
org.sugr.gearshift.TransmissionProfileSupportLoader$1 -> org.sugr.gearshift.du:
    org.sugr.gearshift.TransmissionProfileSupportLoader this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.TransmissionProfileSupportLoader$2 -> org.sugr.gearshift.dv:
    org.sugr.gearshift.TransmissionProfileSupportLoader this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.sugr.gearshift.TransmissionSession -> org.sugr.gearshift.TransmissionSession:
    boolean mAltSpeedEnabled -> a
    long mAltSpeedDown -> b
    long mAltSpeedUp -> c
    boolean mAltSpeedTimeEnabled -> d
    int mAltSpeedTimeBegin -> e
    int mAltSpeedTimeEnd -> f
    boolean mBlocklistEnabled -> g
    long mBlocklistSize -> h
    java.lang.String mBlocklistURL -> i
    long mCacheSize -> j
    boolean mDHTEnabled -> k
    java.lang.String mDownloadDir -> l
    long mDownloadDirFreeSpace -> m
    int mDownloadQueueSize -> n
    boolean mDownloadQueueEnabled -> o
    long mSpeedLimitDown -> p
    boolean mSpeedLimitDownEnabled -> q
    java.lang.String mEncryption -> r
    java.lang.String mIncompleteDir -> s
    boolean mIncompleteDirEnabled -> t
    boolean mLPDEnabled -> u
    int mGlobalPeerLimit -> v
    int mTorrentPeerLimit -> w
    boolean mPEXEnabled -> x
    int mPeerPort -> y
    boolean mPortForwardingEnabled -> z
    boolean mPeerPortRandomOnStart -> A
    boolean mRenamePartial -> B
    int mRPCVersion -> C
    int mRPCVersionMin -> D
    java.lang.String mDoneScript -> E
    boolean mDoneScriptEnabled -> F
    int mSeedQueueSize -> G
    boolean mSeedQueueEnabled -> H
    float mSeedRatioLimit -> I
    boolean mSeedRatioLimited -> J
    long mSpeedLimitUp -> K
    boolean mSpeedLimitUpEnabled -> L
    int mStalledQueueSize -> M
    boolean mStalledQueueEnabled -> N
    boolean mStartAdded -> O
    boolean mTrashOriginal -> P
    java.lang.String mVersion -> Q
    java.util.Set mDownloadDirectories -> R
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isAltSpeedLimitEnabled() -> a
    long getAltDownloadSpeedLimit() -> b
    long getAltUploadSpeedLimit() -> c
    boolean isAltSpeedLimitTimeEnabled() -> d
    int getAltSpeedTimeBegin() -> e
    int getAltSpeedTimeEnd() -> f
    boolean isBlocklistEnabled() -> g
    long getBlocklistSize() -> h
    java.lang.String getBlocklistURL() -> i
    boolean isDHTEnabled() -> j
    java.lang.String getEncryption() -> k
    long getCacheSize() -> l
    java.lang.String getDownloadDir() -> m
    long getDownloadDirFreeSpace() -> n
    int getDownloadQueueSize() -> o
    boolean isDownloadQueueEnabled() -> p
    java.lang.String getIncompleteDir() -> q
    boolean isIncompleteDirEnabled() -> r
    boolean isLocalDiscoveryEnabled() -> s
    int getGlobalPeerLimit() -> t
    int getTorrentPeerLimit() -> u
    boolean isPeerExchangeEnabled() -> v
    int getPeerPort() -> w
    boolean isPeerPortRandomOnStart() -> x
    boolean isPortForwardingEnabled() -> y
    boolean isRenamePartialFilesEnabled() -> z
    int getRPCVersion() -> A
    java.lang.String getDoneScript() -> B
    boolean isDoneScriptEnabled() -> C
    int getSeedQueueSize() -> D
    boolean isSeedQueueEnabled() -> E
    float getSeedRatioLimit() -> F
    boolean isSeedRatioLimitEnabled() -> G
    long getDownloadSpeedLimit() -> H
    boolean isDownloadSpeedLimitEnabled() -> I
    long getUploadSpeedLimit() -> J
    boolean isUploadSpeedLimitEnabled() -> K
    int getStalledQueueSize() -> L
    boolean isStalledQueueEnabled() -> M
    boolean isStartAddedTorrentsEnabled() -> N
    boolean isTrashOriginalTorrentFilesEnabled() -> O
    void setAltSpeedLimitEnabled(boolean) -> a
    void setAltDownloadSpeedLimit(long) -> a
    void setAltUploadSpeedLimit(long) -> b
    void setAltSpeedLimitTimeEnabled(boolean) -> b
    void setAltSpeedTimeBegin(int) -> a
    void setAltSpeedTimeEnd(int) -> b
    void setBlocklistEnabled(boolean) -> c
    void setBlocklistSize(long) -> c
    void setBlocklistURL(java.lang.String) -> a
    void setDHTEnabled(boolean) -> d
    void setEncryption(java.lang.String) -> b
    void setCacheSize(long) -> d
    void setDownloadDir(java.lang.String) -> c
    void setDownloadDirFreeSpace(long) -> e
    void setDownloadQueueSize(int) -> c
    void setDownloadQueueEnabled(boolean) -> e
    void setIncompleteDir(java.lang.String) -> d
    void setLocalDiscoveryEnabled(boolean) -> f
    void setIncompleteDirEnabled(boolean) -> g
    void setGlobalPeerLimit(int) -> d
    void setTorrentPeerLimit(int) -> e
    void setPeerExchangeEnabled(boolean) -> h
    void setPeerPort(int) -> f
    void setPeerPortRandomOnStart(boolean) -> i
    void setPortForwardingEnabled(boolean) -> j
    void setRenamePartialFilesEnabled(boolean) -> k
    void setDoneScript(java.lang.String) -> e
    void setDoneScriptEnabled(boolean) -> l
    void setSeedQueueSize(int) -> g
    void setSeedQueueEnabled(boolean) -> m
    void setSeedRatioLimit(float) -> a
    void setSeedRatioLimitEnabled(boolean) -> n
    void setDownloadSpeedLimit(long) -> f
    void setDownloadSpeedLimitEnabled(boolean) -> o
    void setUploadSpeedLimit(long) -> g
    void setUploadSpeedLimitEnabled(boolean) -> p
    void setStalledQueueSize(int) -> h
    void setStalledQueueEnabled(boolean) -> q
    void setStartAddedTorrentsEnabled(boolean) -> r
    void setTrashOriginalTorrentFilesEnabled(boolean) -> s
    void setDownloadDirectories(org.sugr.gearshift.TransmissionProfile,java.util.List) -> a
    java.util.Set getDownloadDirectories() -> P
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.sugr.gearshift.TransmissionSession$1 -> org.sugr.gearshift.dw:
    org.sugr.gearshift.TransmissionSession createFromParcel(android.os.Parcel) -> a
    org.sugr.gearshift.TransmissionSession[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.sugr.gearshift.TransmissionSessionActivity -> org.sugr.gearshift.TransmissionSessionActivity:
    org.sugr.gearshift.TransmissionProfile mProfile -> n
    org.sugr.gearshift.TransmissionSession mSession -> o
    boolean mRefreshing -> p
    android.support.v4.app.LoaderManager$LoaderCallbacks mSessionLoaderCallbacks -> q
    boolean[] mExpandedStates -> r
    java.util.List mEncryptionValues -> s
    android.view.View$OnClickListener mExpanderListener -> t
    java.lang.Runnable mLoseFocus -> u
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setAltSpeedLimitTimeBegin(int) -> a
    void setAltSpeedLimitTimeEnd(int) -> b
    void updateFields(org.sugr.gearshift.TransmissionSession,boolean) -> a
    void initListeners() -> g
    void setSession(java.lang.String[]) -> a
    void showTimePickerDialog(boolean,int,int) -> a
    org.sugr.gearshift.TransmissionProfile access$000(org.sugr.gearshift.TransmissionSessionActivity) -> a
    org.sugr.gearshift.TransmissionSession access$102(org.sugr.gearshift.TransmissionSessionActivity,org.sugr.gearshift.TransmissionSession) -> a
    org.sugr.gearshift.TransmissionSession access$100(org.sugr.gearshift.TransmissionSessionActivity) -> b
    void access$200(org.sugr.gearshift.TransmissionSessionActivity,org.sugr.gearshift.TransmissionSession,boolean) -> a
    boolean access$300(org.sugr.gearshift.TransmissionSessionActivity) -> c
    boolean access$302(org.sugr.gearshift.TransmissionSessionActivity,boolean) -> a
    boolean[] access$400(org.sugr.gearshift.TransmissionSessionActivity) -> d
    boolean[] access$402(org.sugr.gearshift.TransmissionSessionActivity,boolean[]) -> a
    void access$500(org.sugr.gearshift.TransmissionSessionActivity,java.lang.String[]) -> a
    java.lang.Runnable access$600(org.sugr.gearshift.TransmissionSessionActivity) -> e
    java.util.List access$800(org.sugr.gearshift.TransmissionSessionActivity) -> f
    void access$1000(org.sugr.gearshift.TransmissionSessionActivity,boolean,int,int) -> a
org.sugr.gearshift.TransmissionSessionActivity$1 -> org.sugr.gearshift.dx:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,org.sugr.gearshift.TransmissionData) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
org.sugr.gearshift.TransmissionSessionActivity$10 -> org.sugr.gearshift.dy:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$11 -> org.sugr.gearshift.dz:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$12 -> org.sugr.gearshift.ea:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$13 -> org.sugr.gearshift.eb:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$14 -> org.sugr.gearshift.ec:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$15 -> org.sugr.gearshift.ed:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TransmissionSessionActivity$16 -> org.sugr.gearshift.ee:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
org.sugr.gearshift.TransmissionSessionActivity$17 -> org.sugr.gearshift.ef:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$18 -> org.sugr.gearshift.eg:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$19 -> org.sugr.gearshift.eh:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$2 -> org.sugr.gearshift.ei:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TransmissionSessionActivity$20 -> org.sugr.gearshift.ej:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$21 -> org.sugr.gearshift.ek:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$22 -> org.sugr.gearshift.el:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$23 -> org.sugr.gearshift.em:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$24 -> org.sugr.gearshift.en:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TransmissionSessionActivity$25 -> org.sugr.gearshift.eo:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$26 -> org.sugr.gearshift.ep:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$27 -> org.sugr.gearshift.eq:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$28 -> org.sugr.gearshift.er:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$29 -> org.sugr.gearshift.es:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$3 -> org.sugr.gearshift.et:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void run() -> run
org.sugr.gearshift.TransmissionSessionActivity$30 -> org.sugr.gearshift.eu:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$31 -> org.sugr.gearshift.ev:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$32 -> org.sugr.gearshift.ew:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$33 -> org.sugr.gearshift.ex:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TransmissionSessionActivity$34 -> org.sugr.gearshift.ey:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onClick(android.view.View) -> onClick
org.sugr.gearshift.TransmissionSessionActivity$35 -> org.sugr.gearshift.ez:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$36 -> org.sugr.gearshift.fa:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$37 -> org.sugr.gearshift.fb:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$38 -> org.sugr.gearshift.fc:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$39 -> org.sugr.gearshift.fd:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$4 -> org.sugr.gearshift.fe:
    android.os.Bundle val$savedInstanceState -> a
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> b
    void run() -> run
org.sugr.gearshift.TransmissionSessionActivity$40 -> org.sugr.gearshift.ff:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$41 -> org.sugr.gearshift.fg:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$42 -> org.sugr.gearshift.fh:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$43 -> org.sugr.gearshift.fi:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$44 -> org.sugr.gearshift.fj:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$5 -> org.sugr.gearshift.fk:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$6 -> org.sugr.gearshift.fl:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$7 -> org.sugr.gearshift.fm:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$8 -> org.sugr.gearshift.fn:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
org.sugr.gearshift.TransmissionSessionActivity$9 -> org.sugr.gearshift.fo:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
org.sugr.gearshift.TransmissionSessionActivity$BlocklistUpdateAsyncTask -> org.sugr.gearshift.fp:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    java.lang.Long doInBackground(java.lang.Void[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Long) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.sugr.gearshift.TransmissionSessionActivity$PortTestAsyncTask -> org.sugr.gearshift.fq:
    org.sugr.gearshift.TransmissionSessionActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.sugr.gearshift.TransmissionSessionInterface -> org.sugr.gearshift.fr:
    void setProfile(org.sugr.gearshift.TransmissionProfile) -> a
    org.sugr.gearshift.TransmissionProfile getProfile() -> i
    void setSession(org.sugr.gearshift.TransmissionSession) -> a
    org.sugr.gearshift.TransmissionSession getSession() -> j
    void setTorrents(java.util.ArrayList) -> a
    java.util.ArrayList getTorrents() -> g
    org.sugr.gearshift.Torrent[] getCurrentTorrents() -> h
    void setRefreshing(boolean) -> b
org.sugr.gearshift.TransmissionSessionLoader -> org.sugr.gearshift.fs:
    org.sugr.gearshift.TransmissionSessionManager mSessManager -> n
    org.sugr.gearshift.TransmissionProfile mProfile -> o
    org.sugr.gearshift.TransmissionSession mSessionSet -> p
    java.util.Set mSessionSetKeys -> q
    java.lang.Object mLock -> r
    boolean mStopUpdates -> s
    android.os.Handler mIntervalHandler -> t
    java.lang.Runnable mIntervalRunner -> u
    int mLastError -> v
    void setSession(org.sugr.gearshift.TransmissionSession,java.lang.String[]) -> a
    org.sugr.gearshift.TransmissionData loadInBackground() -> w
    void deliverResult(org.sugr.gearshift.TransmissionData) -> a
    org.sugr.gearshift.TransmissionData handleError(org.sugr.gearshift.TransmissionSessionManager$ManagerException) -> a
    java.lang.Object loadInBackground() -> d
    void deliverResult(java.lang.Object) -> b
    boolean access$000(org.sugr.gearshift.TransmissionSessionLoader) -> a
org.sugr.gearshift.TransmissionSessionLoader$1 -> org.sugr.gearshift.ft:
    org.sugr.gearshift.TransmissionSessionLoader this$0 -> a
    void run() -> run
org.sugr.gearshift.TransmissionSessionManager -> org.sugr.gearshift.fu:
    org.sugr.gearshift.TransmissionProfile mProfile -> a
    android.net.ConnectivityManager mConnManager -> b
    java.lang.String mSessionId -> c
    int mInvalidSessionRetries -> d
    android.content.SharedPreferences mDefaultPrefs -> e
    boolean hasConnectivity() -> a
    void setProfile(org.sugr.gearshift.TransmissionProfile) -> a
    org.sugr.gearshift.TransmissionSession getSession() -> b
    org.sugr.gearshift.TransmissionSessionStats getSessionStats() -> c
    org.sugr.gearshift.TransmissionSessionManager$ActiveTorrentGetResponse getActiveTorrents(java.lang.String[]) -> a
    org.sugr.gearshift.Torrent[] getAllTorrents(java.lang.String[]) -> b
    org.sugr.gearshift.Torrent[] getTorrents(int[],java.lang.String[]) -> a
    void setSession(org.sugr.gearshift.TransmissionSession,java.lang.String[]) -> a
    void setTorrentsRemove(int[],boolean) -> a
    void setTorrentsAction(java.lang.String,int[]) -> a
    void setTorrentsLocation(int[],java.lang.String,boolean) -> a
    void setTorrentsProperty(int[],java.lang.String,java.lang.Object) -> a
    org.sugr.gearshift.Torrent addTorrent(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    boolean testPort() -> d
    long blocklistUpdate() -> e
    long getFreeSpace(java.lang.String) -> a
    java.lang.String requestData(java.lang.Object,com.google.gson.ExclusionStrategy[]) -> a
    java.lang.String getSessionId(java.net.HttpURLConnection) -> a
    java.lang.String inputStreamToString(java.io.InputStream) -> a
    int[] convertIntegerList(java.util.List) -> a
    java.lang.String[] convertStringList(java.util.List) -> b
org.sugr.gearshift.TransmissionSessionManager$1 -> org.sugr.gearshift.fv:
    org.sugr.gearshift.TransmissionSessionManager this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.sugr.gearshift.TransmissionSessionManager$2 -> org.sugr.gearshift.fw:
    org.sugr.gearshift.TransmissionSessionManager this$0 -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
org.sugr.gearshift.TransmissionSessionManager$ActiveTorrentGetRequest -> org.sugr.gearshift.fx:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$ActiveTorrentGetRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$ActiveTorrentGetRequest$Arguments -> org.sugr.gearshift.fy:
    java.lang.String ids -> a
    java.lang.String[] fields -> b
org.sugr.gearshift.TransmissionSessionManager$ActiveTorrentGetResponse -> org.sugr.gearshift.fz:
    org.sugr.gearshift.TransmissionSessionManager$ActiveTorrentGetResponse$ActiveTorrentsArguments mActiveTorrentsArguments -> b
    org.sugr.gearshift.Torrent[] getTorrents() -> a
    int[] getRemoved() -> b
org.sugr.gearshift.TransmissionSessionManager$ActiveTorrentGetResponse$ActiveTorrentsArguments -> org.sugr.gearshift.ga:
    org.sugr.gearshift.Torrent[] mTorrents -> a
    int[] mRemoved -> b
    org.sugr.gearshift.Torrent[] getTorrents() -> a
    int[] getRemoved() -> b
org.sugr.gearshift.TransmissionSessionManager$AddTorrentResponse -> org.sugr.gearshift.gb:
    org.sugr.gearshift.TransmissionSessionManager$AddTorrentResponse$AddTorrentArguments mArguments -> b
    org.sugr.gearshift.Torrent getTorrent() -> a
    boolean isDuplicate() -> b
org.sugr.gearshift.TransmissionSessionManager$AddTorrentResponse$AddTorrentArguments -> org.sugr.gearshift.gc:
    org.sugr.gearshift.Torrent torrent -> a
    org.sugr.gearshift.Torrent duplicate -> b
org.sugr.gearshift.TransmissionSessionManager$AllTorrentGetRequest -> org.sugr.gearshift.gd:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$AllTorrentGetRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$AllTorrentGetRequest$Arguments -> org.sugr.gearshift.ge:
    java.lang.String[] fields -> a
org.sugr.gearshift.TransmissionSessionManager$BlocklistUpdateRequest -> org.sugr.gearshift.gf:
    java.lang.String method -> a
org.sugr.gearshift.TransmissionSessionManager$BlocklistUpdateResponse -> org.sugr.gearshift.gg:
    org.sugr.gearshift.TransmissionSessionManager$BlocklistUpdateResponse$BlocklistUpdateArguments mArguments -> b
    long getBlocklistSize() -> a
org.sugr.gearshift.TransmissionSessionManager$BlocklistUpdateResponse$BlocklistUpdateArguments -> org.sugr.gearshift.gh:
    long size -> a
org.sugr.gearshift.TransmissionSessionManager$Exclude -> org.sugr.gearshift.gi:
org.sugr.gearshift.TransmissionSessionManager$FreeSpaceRequest -> org.sugr.gearshift.gj:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$FreeSpaceRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$FreeSpaceRequest$Arguments -> org.sugr.gearshift.gk:
    java.lang.String path -> a
org.sugr.gearshift.TransmissionSessionManager$FreeSpaceResponse -> org.sugr.gearshift.gl:
    org.sugr.gearshift.TransmissionSessionManager$FreeSpaceResponse$FreeSpaceArguments mArguments -> b
    long getFreeSpace() -> a
org.sugr.gearshift.TransmissionSessionManager$FreeSpaceResponse$FreeSpaceArguments -> org.sugr.gearshift.gm:
    long freeSpace -> a
org.sugr.gearshift.TransmissionSessionManager$KeyExclusionStrategy -> org.sugr.gearshift.gn:
    java.util.HashSet mKeys -> a
    boolean shouldSkipClass(java.lang.Class) -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
org.sugr.gearshift.TransmissionSessionManager$ManagerException -> org.sugr.gearshift.go:
    int mCode -> a
    org.sugr.gearshift.TransmissionSessionManager this$0 -> b
    int getCode() -> a
org.sugr.gearshift.TransmissionSessionManager$PortTestRequest -> org.sugr.gearshift.gp:
    java.lang.String method -> a
org.sugr.gearshift.TransmissionSessionManager$PortTestResponse -> org.sugr.gearshift.gq:
    org.sugr.gearshift.TransmissionSessionManager$PortTestResponse$PortTestArguments mArguments -> b
    boolean isPortOpen() -> a
org.sugr.gearshift.TransmissionSessionManager$PortTestResponse$PortTestArguments -> org.sugr.gearshift.gr:
    boolean open -> a
org.sugr.gearshift.TransmissionSessionManager$Response -> org.sugr.gearshift.gs:
    java.lang.String mResult -> a
    java.lang.String getResult() -> c
org.sugr.gearshift.TransmissionSessionManager$SessionGetRequest -> org.sugr.gearshift.gt:
    java.lang.String method -> a
org.sugr.gearshift.TransmissionSessionManager$SessionGetResponse -> org.sugr.gearshift.gu:
    org.sugr.gearshift.TransmissionSession mSession -> b
    org.sugr.gearshift.TransmissionSession getSession() -> a
org.sugr.gearshift.TransmissionSessionManager$SessionSetRequest -> org.sugr.gearshift.gv:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSession arguments -> b
org.sugr.gearshift.TransmissionSessionManager$SessionStatsRequest -> org.sugr.gearshift.gw:
    java.lang.String method -> a
org.sugr.gearshift.TransmissionSessionManager$SessionStatsResponse -> org.sugr.gearshift.gx:
    org.sugr.gearshift.TransmissionSessionStats mStats -> b
    org.sugr.gearshift.TransmissionSessionStats getStats() -> a
org.sugr.gearshift.TransmissionSessionManager$TorrentAddRequest -> org.sugr.gearshift.gy:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$TorrentAddRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentAddRequest$Arguments -> org.sugr.gearshift.gz:
    java.lang.String uri -> a
    java.lang.String meta -> b
    java.lang.String location -> c
    boolean paused -> d
org.sugr.gearshift.TransmissionSessionManager$TorrentGetRequest -> org.sugr.gearshift.ha:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$TorrentGetRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentGetRequest$Arguments -> org.sugr.gearshift.hb:
    int[] ids -> a
    java.lang.String[] fields -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentGetResponse -> org.sugr.gearshift.hc:
    org.sugr.gearshift.TransmissionSessionManager$TorrentGetResponse$TorrentsArguments mTorrentsArguments -> b
    org.sugr.gearshift.Torrent[] getTorrents() -> a
org.sugr.gearshift.TransmissionSessionManager$TorrentGetResponse$TorrentsArguments -> org.sugr.gearshift.hd:
    org.sugr.gearshift.Torrent[] mTorrents -> a
    org.sugr.gearshift.Torrent[] getTorrents() -> a
org.sugr.gearshift.TransmissionSessionManager$TorrentsActionRequest -> org.sugr.gearshift.he:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$TorrentsActionRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentsActionRequest$Arguments -> org.sugr.gearshift.hf:
    int[] ids -> a
org.sugr.gearshift.TransmissionSessionManager$TorrentsRemoveRequest -> org.sugr.gearshift.hg:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$TorrentsRemoveRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentsRemoveRequest$Arguments -> org.sugr.gearshift.hh:
    int[] ids -> a
    boolean delete -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentsSetLocationRequest -> org.sugr.gearshift.hi:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$TorrentsSetLocationRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentsSetLocationRequest$Arguments -> org.sugr.gearshift.hj:
    int[] ids -> a
    java.lang.String location -> b
    boolean move -> c
org.sugr.gearshift.TransmissionSessionManager$TorrentsSetRequest -> org.sugr.gearshift.hk:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$TorrentsSetRequest$Arguments arguments -> b
org.sugr.gearshift.TransmissionSessionManager$TorrentsSetRequest$Arguments -> org.sugr.gearshift.hl:
    int[] ids -> a
    long downloadLimit -> b
    boolean downloadLimited -> c
    int peerLimit -> d
    int queuePosition -> e
    float seedRatioLimit -> f
    int seedRatioMode -> g
    boolean honorsSessionLimits -> h
    int torrentPriority -> i
    long uploadLimit -> j
    boolean uploadLimited -> k
    int[] filesWanted -> l
    int[] filesUnwanted -> m
    int[] filesHigh -> n
    int[] filesNormal -> o
    int[] filesLow -> p
    java.lang.String[] trackerAdd -> q
    int[] trackerRemove -> r
org.sugr.gearshift.TransmissionSessionManager$TrackerReplaceRequest -> org.sugr.gearshift.hm:
    java.lang.String method -> a
    org.sugr.gearshift.TransmissionSessionManager$TrackerReplaceRequest$Arguments arguments -> b
    org.sugr.gearshift.Torrent$TrackerReplaceTuple getTuple() -> a
org.sugr.gearshift.TransmissionSessionManager$TrackerReplaceRequest$Arguments -> org.sugr.gearshift.hn:
    int[] ids -> a
    org.sugr.gearshift.Torrent$TrackerReplaceTuple trackerReplace -> b
    org.sugr.gearshift.Torrent$TrackerReplaceTuple getTuple() -> a
org.sugr.gearshift.TransmissionSessionManager$TrackerReplaceRequestSerializer -> org.sugr.gearshift.ho:
    com.google.gson.Gson cleanGson -> a
    com.google.gson.JsonElement serialize(org.sugr.gearshift.TransmissionSessionManager$TrackerReplaceRequest,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
org.sugr.gearshift.TransmissionSessionManager$TransmissionExclusionStrategy -> org.sugr.gearshift.hp:
    boolean shouldSkipClass(java.lang.Class) -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
org.sugr.gearshift.TransmissionSessionStats -> org.sugr.gearshift.hq:
org.sugr.gearshift.util.Base64 -> org.sugr.gearshift.a.a:
    byte[] _STANDARD_ALPHABET -> b
    byte[] _STANDARD_DECODABET -> c
    byte[] _URL_SAFE_ALPHABET -> d
    byte[] _URL_SAFE_DECODABET -> e
    byte[] _ORDERED_ALPHABET -> f
    byte[] _ORDERED_DECODABET -> g
    boolean $assertionsDisabled -> a
    byte[] getAlphabet(int) -> b
    byte[] getDecodabet(int) -> c
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> b
    int decode4to3(byte[],int,byte[],int,int) -> b
    byte[] access$000(int) -> a
    byte[] access$100(byte[],int,int,byte[],int,int) -> a
    int access$200(byte[],int,byte[],int,int) -> a
org.sugr.gearshift.util.Base64$InputStream -> org.sugr.gearshift.a.b:
    boolean encode -> a
    int position -> b
    byte[] buffer -> c
    int bufferLength -> d
    int numSigBytes -> e
    int lineLength -> f
    boolean breakLines -> g
    int options -> h
    byte[] decodabet -> i
    int read() -> read
    int read(byte[],int,int) -> read
